(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    247443,       5347]
NotebookOptionsPosition[    240420,       5115]
NotebookOutlinePosition[    240774,       5131]
CellTagsIndexPosition[    240731,       5128]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Earth Capture Rate Check", "Title",
 CellChangeTimes->{{3.701225550672771*^9, 3.701225555442997*^9}}],

Cell["\<\
Flip Tanedo
flip.tanedo@ucr.edu
14 April 2017

Calculating the capture rate of dark matter (with dark photon mediators) in \
the Earth. 
For cross checking and extension of code in collaboration with Adam Green.

Please cite: 
https://arxiv.org/abs/1509.07525

Physics summary:
https://particlebites.com/?p=3370\
\>", "Text",
 CellChangeTimes->{{3.701225556358088*^9, 3.701225573061648*^9}, 
   3.7012256303562183`*^9, {3.7012700275995207`*^9, 3.701270028467688*^9}, {
   3.7012793172179327`*^9, 3.7012794054247217`*^9}}],

Cell[CellGroupData[{

Cell["PREM Import", "Section",
 CellChangeTimes->{{3.7012277942410593`*^9, 3.7012277964450006`*^9}}],

Cell[TextData[StyleBox["PREM import, from EarthChecker_v2.nb (Jan 2017):",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.701227562761731*^9, 3.7012275631372757`*^9}, {
  3.701227652214114*^9, 3.7012276737660637`*^9}}],

Cell[TextData[{
 "The data about the density of the Earth comes from the PREM 500 model, \
available at PREM 500 from http://ds.iris.edu/ds/products/emc-prem/. The \
citations to this information are:\n\n1. Dziewonski, A.M., and D.L. Anderson. \
1981. \[OpenCurlyDoubleQuote]Preliminary reference Earth model.\
\[CloseCurlyDoubleQuote] Phys. Earth Plan. Int. 25:297-356.\n\n2. Trabant, \
C., A. R. Hutko, M. Bahavar, R. Karstens, T. Ahern and R. Aster (2012), Data \
products at the IRIS DMC: stepping-stones for research and other application, \
Seismological Research Letters, 83(6), 846:854. doi: 10.1785/0220 120032\n\n\
We make use of a file ",
 StyleBox["PREM500jordan.csv",
  FontWeight->"Bold"],
 ", which was processed by Jordan Smolinsky to remove duplicate entries. This \
file is assumed to be in the same directory as this notebook."
}], "Text",
 CellChangeTimes->{{3.692641721167454*^9, 3.692641803248228*^9}, {
  3.6984379837183876`*^9, 3.6984379846862144`*^9}}],

Cell[CellGroupData[{

Cell["Importing data and key features", "Subsection",
 CellChangeTimes->{{3.701264439134902*^9, 3.701264445256399*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myPath", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PREMlocation", "=", 
    RowBox[{"myPath", "<>", "\"\<PREM500jordan.csv\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RawPREMdata", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"PREMlocation", ",", "\"\<CSV\>\""}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TempRadius", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "RawPREMdata", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TempDensity", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "RawPREMdata", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", 
     RowBox[{"kg", "/", 
      SuperscriptBox["m", "3"]}]}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Radius", "=", 
   RowBox[{"TempRadius", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Density", "=", 
   RowBox[{"TempDensity", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PREMlength", "=", 
    RowBox[{"Length", "[", "Radius", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rmeters", "=", 
   RowBox[{"Radius", "/.", 
    RowBox[{"m", "->", "1"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.692641966440001*^9, 3.69264202380856*^9}, {
  3.701264385695252*^9, 3.701264421500311*^9}, {3.701269636021901*^9, 
  3.7012696533988*^9}, {3.7012698038593483`*^9, 3.701269804046997*^9}, {
  3.7012776305966997`*^9, 3.701277644416376*^9}}],

Cell[CellGroupData[{

Cell["Sanity Check", "Subsubsection",
 CellChangeTimes->{{3.701264365063479*^9, 3.701264374648443*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TempRadius", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "RawPREMdata", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TempDensity", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "RawPREMdata", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", 
     RowBox[{"kg", "/", 
      SuperscriptBox["m", "3"]}]}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TempRadius", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "4"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TempDensity", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "4"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "PREMlength"}], "Input",
 CellChangeTimes->{{3.701264423526507*^9, 3.7012644254343433`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"12858", " ", "m"}], ",", 
   RowBox[{"25716", " ", "m"}], ",", 
   RowBox[{"38574", " ", "m"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70126442609291*^9, 3.701269623380897*^9, 
  3.701269659352193*^9, 3.701269767661434*^9, 3.701269817219236*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"13088.5`", " ", "kg"}], 
    SuperscriptBox["m", "3"]], ",", 
   FractionBox[
    RowBox[{"13088.46`", " ", "kg"}], 
    SuperscriptBox["m", "3"]], ",", 
   FractionBox[
    RowBox[{"13088.36`", " ", "kg"}], 
    SuperscriptBox["m", "3"]], ",", 
   FractionBox[
    RowBox[{"13088.18`", " ", "kg"}], 
    SuperscriptBox["m", "3"]]}], "}"}]], "Output",
 CellChangeTimes->{3.70126442609291*^9, 3.701269623380897*^9, 
  3.701269659352193*^9, 3.701269767661434*^9, 3.701269817230454*^9}],

Cell[BoxData["491"], "Output",
 CellChangeTimes->{3.70126442609291*^9, 3.701269623380897*^9, 
  3.701269659352193*^9, 3.701269767661434*^9, 3.701269817238192*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shell Thicknesses and Shell Mass", "Subsection",
 CellChangeTimes->{{3.692642113985097*^9, 3.6926421163967953`*^9}, {
  3.701268573243457*^9, 3.701268575621602*^9}}],

Cell["\<\
Note that the shells are not evenly spaced in the PREM500 data.\
\>", "Text",
 CellChangeTimes->{{3.692642157092411*^9, 3.692642172921503*^9}, {
  3.6984379570766*^9, 3.698437961984537*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]R", "=", 
   RowBox[{
    RowBox[{"TempRadius", "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", 
       RowBox[{"PREMlength", "+", "1"}]}], "]"}], "]"}], "-", 
    RowBox[{"TempRadius", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "PREMlength"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]Rmeters", "=", 
    RowBox[{"\[CapitalDelta]R", "/.", 
     RowBox[{"m", "\[Rule]", "1"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShellMass", "=", 
   RowBox[{
    RowBox[{
     FractionBox["4.", "3"], "\[Pi]", " ", "Density", " ", 
     SuperscriptBox["Radius", "3"]}], "-", 
    RowBox[{
     FractionBox["4.", "3"], "\[Pi]", "  ", "Density", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Radius", "-", "\[CapitalDelta]R"}], ")"}], "3"]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.692642196967144*^9, 3.692642271360385*^9}, {
  3.692643394337648*^9, 3.692643394654969*^9}, {3.7012278648605547`*^9, 
  3.701227865255525*^9}, {3.701268570383113*^9, 3.701268570564148*^9}, {
  3.701277670211398*^9, 3.701277679058881*^9}}],

Cell[CellGroupData[{

Cell["Sanity Check: Earth\[CloseCurlyQuote]s total density", "Subsubsection",
 CellChangeTimes->{{3.701227874407454*^9, 3.701227877512003*^9}, {
  3.701264481715953*^9, 3.701264490154674*^9}}],

Cell[TextData[{
 "This is supposed to match ",
 StyleBox["5.972 e24 kg",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{3.70122789956645*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"4.", "\[Pi]", " ", 
   SuperscriptBox["Radius", "2"], "Density", " ", "\[CapitalDelta]R"}], "//", 
  "Total"}]], "Input",
 CellChangeTimes->{{3.701227880521668*^9, 3.7012278925886087`*^9}}],

Cell[BoxData[
 RowBox[{"5.990577490724783`*^24", " ", "kg"}]], "Output",
 CellChangeTimes->{{3.701227881500287*^9, 3.701227893108673*^9}, 
   3.701268581295141*^9, 3.701269623485944*^9, 3.701269659419353*^9, {
   3.701269754856398*^9, 3.70126976785954*^9}, 3.7012698173056383`*^9}]
}, Open  ]],

Cell["\<\
You get a more accurate estimate if you account for the curvature of the \
shell rather than taking the thin-shell approximation.\
\>", "Text",
 CellChangeTimes->{{3.692643092069353*^9, 3.692643110551577*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShellMass", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6926429432483273`*^9, 3.692643078310396*^9}, {
  3.701227951651765*^9, 3.701227979067037*^9}, {3.7012645156240597`*^9, 
  3.701264520271649*^9}, {3.701268530559166*^9, 3.701268534542281*^9}, {
  3.7012685655172157`*^9, 3.701268566308474*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"8.158158627684408`*^17", " ", "kg"}], ",", 
   RowBox[{"2.2143268884566605`*^18", " ", "kg"}], ",", 
   RowBox[{"4.312024595309334`*^18", " ", "kg"}], ",", 
   RowBox[{"7.108159955237499`*^18", " ", "kg"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.70122795809485*^9, 3.701227979282916*^9}, 
   3.7012645204905043`*^9, {3.701268511271182*^9, 3.701268534765016*^9}, {
   3.701268566670611*^9, 3.70126858136163*^9}, 3.701269623533689*^9, 
   3.7012696594590063`*^9, 3.701269767937743*^9, 3.7012698173398848`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShellMass", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "=", 
    RowBox[{"1.165460137012716`*^17", " ", "kg"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "kludge", " ", "for", " ", "weird", " ", "bug", " ", "with", " ", "0"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "I", " ", "think", " ", "Mathematica", " ", "gets", " ", "confused", " ", 
    "by", " ", "the", " ", "units", " ", "on", " ", "this", " ", "one"}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ShellMass", "//", "Total"}]}], "Input",
 CellChangeTimes->{{3.701264565959118*^9, 3.701264601408269*^9}, {
  3.701268548093514*^9, 3.7012685501273537`*^9}}],

Cell[BoxData[
 RowBox[{"5.968736274643021`*^24", " ", "kg"}]], "Output",
 CellChangeTimes->{
  3.70122795396457*^9, {3.7012645610254374`*^9, 3.7012646017319603`*^9}, {
   3.7012685485035267`*^9, 3.701268550434926*^9}, 3.701268581394637*^9, 
   3.7012696235686913`*^9, 3.701269659519745*^9, 3.701269768003221*^9, 
   3.701269817373557*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sanity Check: Plot of Mass in Each Shell", "Subsubsection",
 CellChangeTimes->{{3.701268736265234*^9, 3.7012687448436823`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"ShellMass", "/.", 
    RowBox[{"{", 
     RowBox[{"kg", "\[Rule]", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"radius", " ", "index"}], ",", 
      "\"\<Mass in each Shell [kg]\>\""}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw113lcjfkXB/DHMgqTGkqSuBKTNoksoQ5JKcuthIRuaSPVTUhJHjG2Cdlr
RFdIEVMkEXrsiYgxdrmMocVS9qUfvzMvn8c/Xu8+53y/93uf+p57uwfH+IQ2
FwShvpkg/Pf/j38NLi1irIofaRNc8QOyefIgomR3DqxLvdod3lB9/BRsQCsM
/3emsL4SNqTMPSFzlXl34E40rW7yJ4/QJ3AXGtTJKadTfi2soDbz29ltM2yE
zanmVrCO+6v3sAU9OJVhrjPjK9yLumT3WxZ2TBj5w5Zkf2mN68V2LWErys04
WJhZqAPb0O52C/yqd7aF7cjDTQq5U60P21OTUVvdQY7t4b5k8+L426CdhrAD
5XYdHGfX3xjuR0q9qrVbX5rA/Um5sORmRmUX2JGod62nzc1u8AAq+dCqZI/Y
HR5I6swDv8236gEPIsGjR7rRcwt4MEnrL/xy/mgv2Ik67T7g4rbNEh5CnTru
OvdhvRU8lBrCnyy7tc0GHkZCWPdO2hI72Jl0m/XZtXyuPexCubctXe229IWJ
BpnZnAs+7fDDIpE6P2aO+Yd+yIdThKGH6ms/R+TDqXzaLb2+SQOQjyCyCWmT
UjkQ+QhKO91Cx8dyMHJXUlRaDchKdULuShRftCnsyxDkI0m7q2ndrthhyEdS
ld7lar83zsjdaJDGaNsQZ0LuRpZFPzffpzMc+SgqkBz+SrwFi6MoLeedfl7e
COTupP07efWqJa7I3Un188SUTtNHIvcgbbFNaz8XN+QepF7d4Dis5yjko8ne
+1B9pb478tHUsMt8rs53WPAk0u4I//eNB3JPsp/RYoi2bjRyL9IMWLl1WY0n
ci8SQnP7uNV5IR9Dwg13+90NY5CPIdWI+OTMr2ORjyXBL3+obdvxyMeSgdpK
b5++Evk4Ug72m66TCYvjqCC51ZJ8K2/k4yntbFuHYaWwOJ7srelS+Tgf5ErS
bGupoqcwKSmtXMr4utAX9UoqqBF7fjKa8MMS++eAHMdDsOBNVb6q84eUfuhn
H1vRK7oRFr0prePBiLBNE9HvTQrHQx/TB09Cvw8Jc3d3Xq2FyYe0ZXo2e1dP
Rj/nZwf5LB3gj37237cMNz+FBV+STNMy7m6agn5fEj6HtfJxD0C/L2mamXb4
8hWWfEmV+leHqkNT0T+BtDPyJv4dOQ39E0jwCT40s9d09HOeuCF52lNYmkCq
o/UPtbsC0e9Hav+HpecdVOj3I2X6+ff5m2CRvdL9dc5HWPKjguUvDQsDgtA/
kbSVk1WXJZgmklh/7vW7XsHon0jC42311mthifOdazbrf4CFSaQa0MZECpyB
/kmkaGyW1aUCFicRhcdfXeoYgn7Ou7/LebsTFiYT2bZuv00XpsmkGFpi8G8s
LE4moaK2YNJ9uX8yaXuUG2eMCkW/PymsY599KoTJn6TTOj+Xdg1Dvz+p+rbY
XJMKS/6kaSq5ZvEVFqaQakJxRPmscPRPIbHG/fmd+7DI+TvPIbVjItA/hSjR
1+SfMlgIIM2BAcuqHGaiP4DEje0WWe2FxQCS9PqHfe4yC/0BRArjb/s2wMJU
EhdE1Pi3iUT/VBL+XbmlegksspeNSbr1BZamEv3k4+M5bzb6p5FgdP360tcw
TSOaXpHTPzIK/ey6cydCa2CJ6/u3WeUZGo3+6SQd0Xk7+ilM7BFx1q+DY9DP
XmJX0v4fWJpOdK+ufrqDGv2BJD4aWfttDkyBRBsWex8pgsVAUmQWX+vzAZYC
SeP0sPvsQbHoV5FkOf1LzEJYwZ500cXuFEwq0iyKstNrPueHVSoSDgz5muUG
i1y/Yf/AT6tgDeebT1eZXoMlFYnjAl1qOsT9sJbXC2o3NskfFoJI9b24dXUW
rAgiSTd5/qN/YeLc9frsX2znYv8gEuzG9HoQB4tBpDHPHjinFNYEkWJsTt3d
FvOwP/d/zF1Z6QVrg0g7d0ndt02wEEyiGD20+CGsCCZhfOv9Q3+dj/05b9Yl
YWssrAomcnLfEl0Ki1z/xfGWUat47M957sOqjd6wxP3/uBouzYS1XJ9+Kbus
BhZmECWY54f0X4D9ZxCPIKVWhGkGCX/ajnW8CqtmkOQ3JOx55wTsz3nHt05v
ImANr1dkVONbDEu8nk5blzUtE7E/u97mbI4vLISQ0NNrrW42rAghuuXpMbIR
phAShzuaBA1fiP1DSBKPXylNg0Wuj6xLXfoY1nBuXbR9cd8k7M95iZFuQAqs
5bztsjcmN2EhlN8v7bbmPRdhf3bN9fzgeJhCSTy8Z8zTclgVSkKK0UJ302Ts
H0pS6Ml2G6JhDbvmwZlGCZZ4PS+do7cMF2N/Xq9XnfZcOCyEkRAw3u6PUlgR
RtoAZYitroj9w4h8e5zQc4BVYaTZnfpONRUWud975wvrFbCGXZS9NqYQlng9
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
J/i8VMDeYX5ljYXfyP8DmsvezA==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Mass in each Shell [kg]\"", TraditionalForm], None}, {
     FormBox[
      RowBox[{"index", " ", "radius"}], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 491.}, {0, 3.1621471845394315`*^22}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.701268746228312*^9, 3.7012696237954407`*^9, 
  3.701269659597224*^9, 3.701269773410118*^9, 3.701269817549694*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Enclosed Mass", "Subsection",
 CellChangeTimes->{{3.7012688167138643`*^9, 3.70126881800593*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnclosedMass", "=", " ", 
   RowBox[{"Accumulate", "[", "ShellMass", "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell["Check of Enclosed Mass", "Subsubsection",
 CellChangeTimes->{{3.7012688278730707`*^9, 3.701268831328661*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EnclosedMass", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "4"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"EnclosedMass", "/.", 
    RowBox[{"{", 
     RowBox[{"kg", "\[Rule]", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"radius", " ", "index"}], ",", 
      "\"\<Mass enclosed by Shell [kg]\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.701268843919695*^9, 3.701268844062042*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.165460137012716`*^17", " ", "kg"}], ",", 
   RowBox[{"9.323618764697124`*^17", " ", "kg"}], ",", 
   RowBox[{"3.146688764926373`*^18", " ", "kg"}], ",", 
   RowBox[{"7.458713360235706`*^18", " ", "kg"}]}], "}"}]], "Output",
 CellChangeTimes->{3.701268844330056*^9, 3.701269623876793*^9, 
  3.7012696596421757`*^9, 3.701269773617684*^9, 3.701269817589511*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt1HlYzIv/BfApW8nStSsxsleSNSKdiihSJCXJlPZ12qapqQwiSURkK03Z
l8ugb1e2hm4iIYqEqwm50ZVkl3v9/B6nf3penc7nfN5PTzPUJ2KRn6ZAIGjW
EAj+//uvr1arDhFGRfXqeFv+AN3MClbUqI/SWujX28b7wP0yWhe3s4b0Oq6u
o/vgf4NsSv+d9YoegLS1t5YPu/+RHoR7c2If7nTVmPXLQtSuSYxorNemDTHy
c3Z8Skgvejj+8re0sZs1kB6JT3uNryZWCenRsOnRM8u0ZgRthBOFCSU7VMa0
CYw8Q4+tXzyeNkW1b8c/vJ0n02ZYZNSl+NRf0+jxWN74cbJWZyt6AlL6+bxK
C7KhJ8J0wIzHMw7Ppidh16jqvq2wpydDNd8sL3a6Iz0F5p12r79zy5k2R9m5
BW6DJ7rQU1E21KWrRpUrPQ3/vk8/8fWQO20B+ZHVi33OL6Onw1an39j8bivo
GRCa1P3X3dmbtoTcZpkgZ/pKeibyDa/UmDj40VbIthyZ25YYQAOWV45/HHw/
6JflwM2ir7bPXUKZW8O9WFPp8y2cuTU2XH0a+OGFmLkN5ndal1bpHcXcBn7W
H48u/BDN3BbmLW65+rmxzG1xfPL+zlc945jPwqsfBVZPJsYzn4Vryi25GsNk
zGfjlm+b7g2jJOazsah94sLL81Yxt0PhmFv37UrlzO1gEFPp3/BmNfM5kHnH
/Pg6Yi3zObC+ujv1cUgK87k4lWHysKpkHfO5WJKdfny4YSpzewRdsNs4NGsD
c3scadyg0av3RuYOOFGt6Y6CdOYOqNc+u6wFGcznwT7D+KDk7Wbm81Cp3Tux
u1sm8/nwnLsjd9vMrcznI0IzbXWE6TbmjujvF958fWQWc0cM6Ga9qXTUduYL
8PuKkZop43cwX4Bd5VMqTGdlM3fC3bVuuc9W7GTuhJT1zWPupOxi7oyZVc3j
ep/d/ctwRvmT1Ff3Xu/h7ztjUXN9yASTnF9WOcMgZ/Y117hc9hfCI39vm6hy
H/sLkdhjzesLfRXsL4TZqnKDFRW0aiHqdNc1Gqfks78I8ZM8ppjZFrC/CNKC
8xHruuxnfxEyA+dvnHaXVi3C1CHvJ3gpDrDvgn6Kkh8dYw+y74KntW1brJwO
se+C5lPpoiHjDrPvggXzjRr+1+cI+4sRtrM+vY/gKPuL8e/RqLo572j5YtRY
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
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Mass enclosed by Shell [kg]\"", TraditionalForm], None}, {
     FormBox[
      RowBox[{"index", " ", "radius"}], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 491.}, {0, 5.968736274643023*^24}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.701268844330056*^9, 3.701269623876793*^9, 
  3.7012696596421757`*^9, 3.701269773617684*^9, 3.70126981762833*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Escape Velocity", "Section",
 CellChangeTimes->{{3.701269204445815*^9, 3.701269206086327*^9}}],

Cell["\<\
The escape velocity in natural units is given by an integral over the \
enclosed mass M(s).\
\>", "Text",
 CellChangeTimes->{{3.69264344303633*^9, 3.6926434856668987`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["v", "2"], "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "r", "\[Infinity]"], 
   RowBox[{
    FractionBox[
     RowBox[{"2", "G", " ", "M", 
      RowBox[{"(", "s", ")"}]}], 
     RowBox[{
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["c", "2"]}]], 
    RowBox[{"\[DifferentialD]", "s", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"[", "G", "]"}], "=", " ", 
        FractionBox[
         SuperscriptBox["L", "3"], 
         RowBox[{"M", " ", 
          SuperscriptBox["T", "2"]}]]}], ";", " ", 
       RowBox[{"c", " ", "=", " ", 
        RowBox[{"speed", " ", "of", " ", "light"}]}]}], " ", 
      "*)"}]}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.643050570032708*^9, 3.643050581933586*^9}, {
  3.643050958377699*^9, 3.643050962174251*^9}, {3.64305106352949*^9, 
  3.6430511398199997`*^9}, {3.6430877001576443`*^9, 3.643087701328487*^9}, {
  3.643120069703248*^9, 3.643120123444257*^9}, {3.6437270197739153`*^9, 
  3.643727040368434*^9}, {3.6437324973678102`*^9, 3.643732498426545*^9}, {
  3.643993693303974*^9, 3.643993783494522*^9}, {3.6926434707082853`*^9, 
  3.692643473838357*^9}}],

Cell[TextData[{
 "So to do this as an array we break apart the integral into two parts \
depending on whether one is inside or outside the radius of the Earth, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "max"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.643995166456904*^9, 3.643995185628069*^9}, 
   3.643995230013453*^9, {3.692643499183095*^9, 3.692643514378797*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", 
    SuperscriptBox[
     RowBox[{"(", "r", ")"}], "2"]}], "=", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "r", 
      SubscriptBox["R", "max"]], 
     RowBox[{
      FractionBox[
       RowBox[{"2", "G", " ", "M", 
        RowBox[{"(", "s", ")"}]}], 
       RowBox[{
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["c", "2"]}]], 
      RowBox[{"\[DifferentialD]", "s"}]}]}], " ", "+", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      SubscriptBox["R", "max"], "\[Infinity]"], 
     RowBox[{
      FractionBox[
       RowBox[{"2", "G", " ", "M", 
        RowBox[{"(", 
         SubscriptBox["R", "max"], ")"}]}], 
       RowBox[{
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["c", "2"]}]], 
      RowBox[{"\[DifferentialD]", "s"}]}]}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "G"}], 
    SuperscriptBox["c", "2"]], "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"s", "=", "r"}], 
       SubscriptBox["R", "max"]], 
      RowBox[{
       FractionBox[
        RowBox[{"M", 
         RowBox[{"(", "s", ")"}]}], 
        SuperscriptBox["s", "2"]], "\[CapitalDelta]R"}]}], ")"}], " ", "+", 
    FractionBox[
     RowBox[{"M", 
      RowBox[{"(", 
       SubscriptBox["R", "max"], ")"}]}], 
     SubscriptBox["R", "max"]]}], "]"}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.643995236680108*^9, 3.6439953758385057`*^9}, {
  3.6926434930916157`*^9, 3.692643494371014*^9}}],

Cell[TextData[{
 "We use the ",
 StyleBox["Accumulate",
  FontWeight->"Bold"],
 " command to take care of the first term. We don\[CloseCurlyQuote]t actually \
ask about ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", ">", 
    SubscriptBox["R", "max"]}], TraditionalForm]]],
 ", so we can ignore the second term."
}], "Text",
 CellChangeTimes->{{3.643995922354863*^9, 3.643995935893406*^9}, {
  3.6926435361921167`*^9, 3.6926435746772947`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GN", "=", 
   RowBox[{
    RowBox[{"6.67384", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "11"}]], " ", 
     FractionBox[
      SuperscriptBox["m", "3"], 
      RowBox[{"kg", " ", 
       SuperscriptBox["s", "2"]}]]}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kg", "\[Rule]", 
       RowBox[{"1000", "g"}]}], ",", 
      RowBox[{"m", "\[Rule]", 
       RowBox[{"100", " ", "cm"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"3.", " ", 
    SuperscriptBox["10", 
     RowBox[{"10", " "}]], 
    FractionBox["cm", "s"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2", "=", 
   RowBox[{
    RowBox[{"2", " ", 
     FractionBox["GN", 
      SuperscriptBox["c", "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalDelta]R", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{"Accumulate", "[", 
          RowBox[{"Reverse", "[", 
           RowBox[{"EnclosedMass", "/", 
            SuperscriptBox["Radius", "2"]}], "]"}], "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"EnclosedMass", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "EnclosedMass", "]"}], "]"}], "]"}], "/", 
        RowBox[{"Radius", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "Radius", "]"}], "]"}], "]"}]}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kg", "\[Rule]", 
       RowBox[{"1000", " ", "g"}]}], ",", 
      RowBox[{"m", "\[Rule]", 
       RowBox[{"100", " ", "cm"}]}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6488483119048443`*^9, 3.648848314492362*^9}, {
  3.6488483707585697`*^9, 3.648848385355989*^9}, {3.648852730464703*^9, 
  3.6488527862900352`*^9}, {3.692643610874732*^9, 3.692643635300152*^9}}],

Cell[CellGroupData[{

Cell["Sanity Checks", "Subsubsection",
 CellChangeTimes->{{3.692643658871428*^9, 3.692643659464304*^9}, {
  3.701269290660602*^9, 3.7012692912453527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v2", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6926436393063173`*^9, 3.692643641122748*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.470186306318823`*^-9", ",", "2.4701728635949144`*^-9", ",", 
   "2.4701459783268333`*^-9", ",", "2.4701056508421006`*^-9"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.692643641320756*^9, 3.693606915281035*^9, 
  3.69360694568335*^9, 3.695412207246564*^9, 3.695998033984024*^9, 
  3.6959981505098543`*^9, 3.6979197813608017`*^9, 3.698457946416629*^9, 
  3.7011913147801456`*^9, 3.7012692505008087`*^9, 3.701269588829949*^9, 
  3.701269619318687*^9, 3.701269659754788*^9, 3.7012698177040777`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"v2", ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"radius", " ", "index"}], ",", 
      "\"\<Escape velocity squared, \!\(\*SuperscriptBox[\(v\), \
\(2\)]\)\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw91nlczHn8B/BBWRS1CqXVRSfRoWKJF6LDVTro0tR0XzM10zFNU1GI5DeL
skkqRyF0sI7WMVm2Q5HVruQqbAgJLUX4+T1+n3fzT4/nvB+v7+v7evTP6AXy
1wQP53A4L4dxOP/39/8/vQtNJmnbf7M1WMC+QMaUW9UfhzwKf163kz0fsiqW
2wru3xqyOl49rHDIHLIGYtPzanOG/BMUpDXe3CHrQiVVgTd9yPo4qpLf3mND
nobs8AO1x4ZsCJ7DKg3/IRsjal7LQ6Uhm+KwwH9ClTV5Bsb2zbmwasgz4aZg
sPO32WRzSDU4vsIhW+D+9HSPT1ZkS9ik8+XiIVuh/NjUwreW5NnIHtH/MmDI
1rgdvvxEowXZBiX/s7Fz+pBt4XBecesmc/Ic5J7fknJkFnkubv3daqU/5J8x
Ukd5TvBM8jyYKQVXFZuR58P114Di1hlkOygLshSHDXkB1F8FdRpMJy/EEqus
2UtMyYBB/+Zv60yY0wHJlc+LQ43pvgjtvPLhC43ovghe9m+sow3pvhhOub93
BRnQfTFeftwz3mMa3ZegNs22xm4q3Zcg4LXrQ219utvjZNXBtH5duttjjfKb
/Y06dF+Kz/UD83O16b4Ukm1av5hMofsyfGop7Vf7ie7LUBbRM6l+Mt0doKS/
6LxIk+4OmO4ifaCpQXdHSPW3bDo7ke6O0BE5VK+cQHcnOLSUB91Xo7sTqn4p
K+SNp7szjIos1j9RpbszVK2mGJip0H05jJeMS24aS/flyFgfdsdame4roN7D
le8ZQ/cVWBTyg827UXRfCbFK7NylP9B9JdQ7zl6XKdJ9Fbipn163jqD7KsQs
9i35cTjdV2P/mZoqDQ7dV+N26Aq56Os0dndBguG8mQWDzHCB77XRljWfmNNd
sMOkr+lWP7PcBQ9Gz+c8/kB5V7g1GDV391HeFRri4dav3lHeFWbtWnO7einv
CgX/+va2HsqvwabyLKe8V5RfA2eTmMGybsqvweXhpmmZzym/BhcMvx7y6qK8
Gz7vXss3ekp5N0zQOfrodSfl3TBmWvjH448o74a8O2rngh5Q3h2z50+fOuEe
5d3R7xt+Q9ZGeXc0xnV+9f+H8u44uHtv3KfblPfAFYX/8nJuUd4DylbbojVv
Uv773X/gY2ET5T3wzPNfW61Gynvi6NkPM3+po7wnVt5sf/jtKuU9kbF3iVPo
Fcp7YtUh74y9lym/FqFjy911L1J+LV4vNByIraH8Wuit0/W/cJbya5H5iJf1
7TTl12FlUaaw+gTl12HrqVC7ieWUXwe5VdWhyUcovw7wTu6JPUx5L2QaXRsV
cYDyXvire2ZIVhHlvVDZ13qnaR/lvfAG4yKq8ynvjavh+UqX8ijvjTet37a/
2UV5byxw6tl4RUZ5b6h7TvR6lkN5HxzSufngxDbK+2CGLOqnvVso74Mx4X5P
yzMp7wOdjV2n/TdQ3hfuIv/aoFTK+2JSIFddWUJ5X0z5uLSpLZHyvkhPtDvb
KKK8HyI28B39Yynvh1O5IiXNGMr7YXL2seaPEZT3Q321Ur44lPLr0R4q37k8
iPLr8Xaf5105l/Lr8TTLaNDbj/LrMZhoUKfpTXl/XHxr4pDiSXl/dCV9cZjp
Rnl/RAve22euprw/zs8oqPu6nPJcPH0avrfQkVmXC7vDqf902NPzuHj8YFdn
3CJmLhdSC5fio3b0fC7qRX3bFX5mLuZiflWEIMOG+rjg/ScVl1kyd3DxrXuS
5M1M6g+AsoGFnc906g9Ao0N1fpQR9Qeg4eHUoutTqT8Awe+Cd7ToUH8ALs57
pjWgRf0BWF4zctxSDeoPgPnW9TxbdeoPwJbL+QcTVKk/EP2bNuT7KlN/IEY6
7b0VPIr6A5FkfEh1pwL1B8IzxCEjmEP9gbAb3//NZ3Aq6w+ERr3EOb6fWR6I
L2PMnWz6mDsCUbBuVf/iXmYODya7b1R/fMmsy0Ptsp81bj5jBg/ep6u6658w
c3l4n5yxMvIRczoPB9zzctfdo34eaiq16nv+oX4eGowD7Mv+on4eqh89btxw
g/qDcK1U+5piI/UHIeRrU3P5NeoPwkSz6EPCWuoPwni1ouR/L1B/EDTzV3QV
n6P+IKS1mVWOPE39QXiU8WnqjgrqD8Lv4dnfbMqpPxgT/P0atpVSfzBUbNRc
jA5QfzC0XyYY8gupPxiFzRpo+5X6g+H+wMwrcDf1B6PllqHnr/9D/cGo6V1g
OTGb+oMR/ibUE5upPwQHzve7Z2+g/hDsLMp4/iGF+kPw3wOBr0oS9Yfg8+Bf
EY5C6g/B9cVLmktiqD8ELWPvHDsSTv0huLn/w8B/QdQfgtKZl2a89af+UES6
HMtR9qH+UNyoOt3q4En9oXDfPmu/hSv1h+KEz7ge7grqD0W6fc70hQ7UH4qs
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
K1OxT6f68vHOSQv+F82sezU=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 1.3360838299226689`*^-9},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Escape velocity squared, \\!\\(\\*SuperscriptBox[\\(v\\), \\(2\\)]\\)\
\"", TraditionalForm], None}, {
     FormBox[
      RowBox[{"index", " ", "radius"}], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 491.}, {1.390088709751057*^-9, 2.470186306318823*^-9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692643668003289*^9, 3.693606915330735*^9, 
  3.693606945741521*^9, 3.695412207300955*^9, 3.69599803403561*^9, 
  3.6959981505729313`*^9, 3.6979197816956377`*^9, 3.698457949933546*^9, 
  3.7011913148320017`*^9, 3.7012692590049973`*^9, 3.7012695891880903`*^9, 
  3.701269619500078*^9, 3.701269659802554*^9, 3.701269817748167*^9}]
}, Open  ]],

Cell["\<\
We can redraw the above plot for actual radius, rather than \
\[OpenCurlyDoubleQuote]radius array index.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.692643698896449*^9, 3.692643720432392*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RadiusAndEscVel2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"Radius", ",", "v2"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RadiusAndEscVel2", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"12858", " ", "m"}], ",", "2.470186306318823`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"25716", " ", "m"}], ",", "2.4701728635949144`*^-9"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"38574", " ", "m"}], ",", "2.4701459783268333`*^-9"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"51432", " ", "m"}], ",", "2.4701056508421006`*^-9"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6926436845055637`*^9, 3.693606915358152*^9, 
  3.693606945773407*^9, 3.6954122073308077`*^9, 3.6959980340683804`*^9, 
  3.69599815060754*^9, 3.697919781739416*^9, 3.698457953794245*^9, 
  3.7011913148809147`*^9, 3.7012692795678864`*^9, 3.701269589252096*^9, 
  3.701269619547455*^9, 3.7012696598697767`*^9, 3.701269817789186*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"RadiusAndEscVel2", "/.", 
    RowBox[{"{", 
     RowBox[{"m", "\[Rule]", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Radius [m]\>\"", ",", 
      "\"\<Escape velocity squared, \!\(\*SuperscriptBox[\(v\), \
\(2\)]\)\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.3360838299226689`*^-9},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Escape velocity squared, \\!\\(\\*SuperscriptBox[\\(v\\), \\(2\\)]\\)\
\"", TraditionalForm], None}, {
     FormBox["\"Radius [m]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6.371*^6}, {1.390088709751057*^-9, 2.470186306318823*^-9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.692643691482568*^9, 3.693606915427627*^9, 
  3.69360694582495*^9, 3.695412207383791*^9, 3.695998034116358*^9, 
  3.695998150663072*^9, 3.697919781923194*^9, 3.6984579588114977`*^9, 
  3.7011913149418287`*^9, 3.701269283267027*^9, 3.701269589620097*^9, 
  3.701269619904172*^9, 3.701269660046834*^9, 3.701269817839307*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load Data: Crust vs. Mantle", "Section",
 CellChangeTimes->{{3.701225647697454*^9, 3.7012256503078327`*^9}, {
  3.701227807539732*^9, 3.7012278173862953`*^9}}],

Cell["\<\
The data for the elemental mass fractions are from \
https://arxiv.org/abs/astro-ph/0401113:\
\>", "Text",
 CellChangeTimes->{{3.701225769256648*^9, 3.70122578383709*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd8V8ed7p33bsvefe/dfXc/2+7e3WSzu1lnk6yTOE6cGNuxKab3JpCE
ulAvqCIJVSShiroACSEJgQBRBBJCCIGEei+o99577993/kKAMCTGCWBsn8cZ
O6OZ/5lyZp75/eac88y/qhhs1/gf3/rWtw59W/xru7L5x8bGypY7/kpEdukf
0tLUV1dbp2+irqlu/J7KH4k//sv/861v/YMIfyz+PxIkSJAgQYIECRIkSJAg
QYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAgQYIECRIkSJAg
QYIECRIkSJAgQYIECRIkSJAgQYIECRIkLMPs7CxTU1NSkIIUvkFhZmaGhYWF
V8otc3Nz1NXVce/ePSlIQQrfoFBaWsrExMQr5RcZjyUnJ+Ps7CwFKUjhGxQu
XbrEwMDAK+UXCRIkSJAgQYIECRIkSJAg4euK+ekppiYnmXi1jwa+uZifY3Zy
gvHJaWbmv+zKSJDwOjHLYH4GuQn3yB6ee/3Fz08y3NJEY3UbvTO/P8HNjw/Q
Xl1MSkoKd7KLqel7znOOyQFaKnK4fe8uyYXlVHeNita/YkwN0/aggCuRFwgL
SyQvd+AVlznP1FA7rQ21NAxPv9KSJEj4XMy0k26jwO73FbDN7H527C9MMjg0
RE//5Kspf6yOO57WGOh5caX39+e3mbYSEk5Y8O67P+LP/nUNWmFFDD9FV/NM
51zAffV3+J/f/Xd+dsiTwNQGxv/gBvwuLDBdEU+QvjLf+eF63vnOfqw1shl5
mdfv62WgpZ2Bx3bROK0Jvjjp6WGV1vbSSpIg4ffBQlMqQcZr+ON/Xc1+t2Ra
PzvFJ2pJTrlHeFLLq6nASB3XQ2xQdPYlYeAPtJ/mO4g8fYTv/MXb7N/px63l
15sdoOn4EfS//W0+2q3B6Y6ZP6ysF8IMXefcOKW3nyOF9ZTnZXAtr4Wpl3b9
adpiYkmyP0XqI1NlYZS2i0HYHLDCK739pZUkQcIXxsIUTbfjOWOhxZb1a/lE
zo6Yric29fzkCN2Z53Dx9EbnygM6B4cZnH44Z+enxuhvb6Kmppa69h4GpmR/
n2NqbJCe9g66+wcZGeqnq6mRhvZeBidmmBkVaSLeLPL3i/iC+Gd2YpSBznba
+wYZnF0yOOanGR/ooLGuhuqGNroHJ5h+EddpppWitFj8t8ljuVIBi+stPJ52
rYVkXQvAfvsu7DercqptaZYvzDI93EdHYx1V9U009Y8ysWQLLMxMMNzVIny3
WurrG2nq7qNbtH92XLSjuZ6aunrqm9roHBjlWetujumJASpdzfHfvwfb0m5h
Bw4y1NtJR08fA4Oib1pbqO8bZXxhgbmpUQZFfzZU1dHYJvprevlGzTwzosxO
UcfqmnpaugcYm5xktDOXm8YmuK6x41xHP4PD40xNTzLW30VbRxe9wxMs3S2m
xwbobBK/r2uguWeIsbmH7Rvp66RVtKt/aIShrjaaGkV7BsdfIgdK+MZirIak
GMEvEfe546XEzk92YpnY8HhsTbQ94KrpTt751Sp+7RZOTFY+eT3jzA23Uil4
KcLzBL7+/pwMOE18Yh7Nw4N0VWVw1dMTXxc/LkTHcPX0CY4GhOAdHsedq3Fc
F3FP/5N43c6jfnqWkcZSkgLc8Am9REKv8M5mx2ivSOXSGW88/bxxd/bB7cxt
svpeYC9hqpnc3Ayiw0NwUVJEcdsFKmRmysI07Smp3A+PINrOmCOP+WWB+Z5i
CiL98bL2xD3AH9+w69wp7mV6bpyWkmxiAk8SGnSCU+6Ooo5nuF7XQmVWLKdO
neLkqRM4u3ngeC6e6s/u2y5M0NeQT5zcbjT+7UM+CrpJVnYGmbGB+Hg4EXA6
CDdnOw6cukGe8D8bcq4R5uGAv4cfXj6h+KYW0T4lu+gsE10lpMWeweW4H97O
TiJPEDeSiii5bI7CL/+cv1uxGp3oO+QU19Pb30ZlfBDHXN3xjqtgSPx+qvkB
hZfCCT4ZiG9gEP5hMVzKqaevp4WS+ADcPBw5HnGRhJjzhB4PwDc6jrSeV+QP
S/iGYIGZwhvERUXgVTlC110PdDb8nK1WFyhfch2mhvpouGbHPlN1tpy6S3F9
C10Dg9TGu2C8SQXLI4V0D/fQEGCO7SYl9K4X0tNRyW2Dnaz/k+/yke4J8mrL
iTyqyD/95Q94XzuctNoKzjoqsUFJi9DOaWb660k23YOZnCZBLVPMNt7GxXQ3
b6vZEtnUTumJI2zepYtFds/nN0nwS1ZmFpdv5XLpuBJvy6kQWDu+uMdz/3Yy
50X9Uty1MN6qtsQv8wyl+uO+cR1GBml01N3CRV4dxR3RgiurOGl3lG2bT5Mu
5n/7bTfO+VgRlXAJD3cTDlx+wNBgM5dPOKIi8mV/duNKcNpYfyO5Jmq4fLgR
9cRimuqrqYi1QPP9P+GtDXvZbWfBOksX4qpKOO+sxmota3I7G7jsosi7u/fj
XTMiaEpwpp8B29bKY55UTU+mD/7rV6GmGk1FWQL2mlv54XolfAtqae0YYHpy
gNZYI7TWrUTOJI2hiVby7cwx+4kWnoVtjPdWc/WYEZvkzXArbKbpliEGH/0x
31+hzrG8aurinVBX3obS2Upehwcp4WuK+TFqAzw4o2WKb34ZpbdPY7j1x/zH
Ti3CGp48e5kqCMTR/wimqZ0P/zBUgr+lIu+rHyHp0eZoXw5BJqqsVHHnzuQs
HWeOYq+6H5usPmR7BJ1nHBbj1pmy+CxtAc6EG6gS3D71VNy9fZjWCDtUd27F
6EYDMh9jtDqLlISbXGt+gZ1YwS856RlcFjZYb4I3mvI7UQ3Npb8slZQbV4ju
6CbZQxOtbWqP7ZfxmgxunPbFTmYj3buJnYEpq+QDKBqo44qHJetXq2MSHEX0
pSucu5dBevpNgswO8LaiPZ5RF7h8+Qb3s8pofa7/Nkt7iAcRuor4L+33TFeE
42apg4pbHqPjE4wOjDA51kpu7Dm8HSO5n5bNHU9VlHdsQf92K7NVl/BRU2T7
gWvUym6b4OPc2wmcvVfD5FApZ2zN2LQzgPxl/DZbFomnzkHkjTMYqLyMt6Iy
BvvvC1tmqZuKT+OiK4eCbRbD1VfxU1JCa1cS3SJtpuosnobq7DW+T98LDyYJ
Ej6DwTIxjg9huEsJZy8vjrsfRXvX+/zL+5swPF/++LnKREEQ9j5HME7uYHxw
hJHyOxw3NGSdaih5j7ZPu7LwM1rJTw/ocXZgirZAB8L01Qlskfk007QFOXBa
xAOW4s1izQ99zC9P4rZt3VTY6GL47l4Op3c8rur8/Dxzc/N87hbMtOCXjHSu
3GpioTOXSANN5LaZEXbhOreiU+lY6ObuMY1l/DLDRG0ud/2dUFXQR1nFHJVt
WijuOUHWcD+NqdG4a+7kw/ff4/s//g0/0z/F1fJaKn1sMXnnPX717k/5t1Wb
2BeeRO1zN4imaQ1zJUxHAf+l/Z7JkjDcfczQTWxdyrMg/M1aSm8E4rn3EDa7
TLHYu5nNK7ehn9TMaFEoTkZKyDtkMPjosgvzok/mWOgv4bS1EWv3eJM6PsnE
6CCdUwtMl5/hmK7yIr+053pirrwCeaeMx8+tpisi8DyohIJKKj2Cf9z1lNhv
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
gwyOjDMxM8P05BjDA/0MjIwtnoM1OjzIgCx9dILxOWFny87HGhgQ8fFFXe6F
mUlGeztpbeugs7+P3oZSqiqraBZ24PzsJMO97TTV19PY3sugzP4T68PEcB9d
3b0MDT/UtJZpRXf0L+l8v1AbR6gIMWTHqvUYRJQ828YHodhuX8nHmkGkjH/t
CWYJs7T6OXHGSKYd9UiLepq+JDesFIQN65NH/8gwHTmJxF04T3T1l6LYL6sU
Q+nH0bXdhH5808M/TTUS5arCb+S1uDQw/5m8PujZbkQvvnEpbxPn3dT4zT6N
z+R9OXUbzvTHyHYd2jceldfMRU8NPtqryoXfUt7CRA91N+yw+OhP+ae12zmU
2v5b04xT2mUES4GPAWar5PGuX9Lhab1LmI4lersT6X7JrXqpGK3ktOFmfrxZ
H9+SoWfT+/Lw113NDxRNiChvoCorgYiwINxjkklp7aE5K5GzQSdxTs2nsKyc
7MtnOeUewvmbgjfGp+gpSSb2RAink8uoHxymKf8ul0NOcCI0jMDTfgQYbURb
3wTblApqChOIDvHET9jl/t6niL1TQk9/B3UynW9Pb3z8o7kacYlI/wACTt0g
obT3xTQuxqo5a7aD/16vhWfRc8737i/khNE6/mOfPiG/Rff164dpmoPsCVnO
L3Nd5NqroPnTlWidvU76vXvcvJtOSlUL/TNfFu9O0xbtjLXyTkxTlmyouW7S
XTXR36ZGUNvU03kvOGOjvAOTZXkz3LTQ36JCYNvL9vGmaY85hq3SVowe2Xfz
3WR56aK/8QD+zzs/RPg+PXkJnAsNIiDAiqP6mzBIbn+c1pt366k0fVnaXCep
PrqobThAYMuSL9tfTIS1Fdu3hFD4JhswHRkc1fgN/6VqyYWO53x7P1FPrOEW
Vm/Q5lB2Pa1Z57A/8Ev+aosO++NySThizuZt2pgmFlHbXEPaESU+/dOPUVNN
oHR2mpZzlhzasZ9DZ8vpaUzGQUeZdQYnKXyQxDGlX7FObjcucSmkCc6xlN/A
WhtvimV64UeVMNing3lOs+jzcxhs/jF//5frOOSQuajzbbtLU5QRS+2LLEmd
2XjorOItxUNEPe9cmolG4s128ekadVwKX/fJXV8WnsMvsx2k2yvxzh/9b34k
1pPIpHj8zNXZqGjDmQeDr/3MxEf1fIZf5ju566aOluCXk5/HLyLvPY+DaAl+
Ofla+KWLVG+dZRqZyyH89PYibgRE4B1QSOtlb5wVH/GLSOsoIu4zaYv8Mt5A
3DExbzYpEvjomovadodYtes46W+yMElPPj5aq/nuPmNC6p+jtTNQxBndT/mv
TXp4Fz9c+0eKo3E+oMCWjxXRO3aaMyVPzpJYaEvGX1kDBc0zJI8MURITw5Xo
RMqFqzNZ4Imxhjp67rmMz7ZzzXwfGirmBPQMUHHwIAo/2oZ6VAZ1dXVU3rBB
1dIQs8tVzPXnP6Pz7aGv+0Tn+/PQW0iQ/jr+725dguqe8370YClRRhv44VpN
3AoHnk3/WuJ59ovgFyclfv3OPg7ffrimThYFYKe0g33md2j9UkyY5/NLiuAX
3Rfkl1QPTXRfI7+keWujs/FZflkQPJF73h9/jzDixyZpjjmKqeIGtBObmR1r
JjdapLk/naYl0uh/wHnbbfxg82f5xYx12wMeamm+qZhuI9lqD6t/KY+N8CE/
0yPM1wp7Zd8veVvtKFe6lwyx+UHKNTXZ8q2/YZ1WENmjyxq4MECxuxbaO3Ww
vxrPyZgbHE99eM7JQn08R/dps1MuhOzcRJzN1NnvFkzlaDv3TXbxwd+/wzu6
jvj6+eHt7Y6jXySX85qZ6c15Rud7UZf3kc7352Gmg1T7faz9+R7MrzU828b6
i7go/oofH7Dl4tddv/cxhG0ZaE/oZ/glzVEZwy2aBDU+9POnisNw3bKWT5VD
yfpSDJgZMYddsFbbjsmjfVDBGenH1DHe+ll+maHjsis2ats4lPwkb4a7Jsab
XwW/iPKuumGruhnDO21L5XUJ/0gL4w2f5ZeFxX0+Ow8NNoemUPYglzt+Kqxb
+xM+PX6d8vth2HmqPzetsaOGu4IjFTd+hl+szdm4I4jcN3rITtAR64j+9z5m
r2o0uSNTj5+rLUz2URp+EOUPfoW6Wyp1snYIH3GyLIObusLe+OEP+b9bldCP
yXnqWfy06Mcj6vv47xUaOETGk/VoQ7UnDR9zU361Sh8Lcxs8T1zhbusICwvD
VB/VRWeTBjapT/TCG2taqagdYKE3+zM631m46zzR+V6YHKK5sp7yyl6Gn7tn
P0lnvAvG3/+I3fJnyR5e1sapfsqihG/74buoOt2l9o2+Vy8Tk7R6HCHsoAbB
j+bd/ACFfnro7FTAJa9vsY8mC4Nw2PMxmwzPCn/3y6jnHEOpvjjo7kYrouyh
hvVkA/GOeqjtNOF01xhjTVU0llTSMjHN0H1fHHV3cTD8Sd6bR/VR3W5MdPfL
JkhRt7QAnHV3oB72YKm8Rm65GqKy1ZCo7mlmhtporqukrGeYwdocbofKznY7
RWhAIJ76m1j//T/nB3tF3otXSTj9bNp/7TXiSkExhScNBZ/uw63y4Ym5880J
BJiYsV/xNl/ek70XxHgrd71M2LVNEZXTCWRVN9PWWEXR9ZMYKG1n9RFfbnZM
Mj/eR3NhHCdW6uN9MIqy7gp89Dfwz5/sxPJmIY0DS+8VTbVyy343P/v5Xo5c
rH2iW9mVRrCPC5sOeXPydCihZ6KIib1LblUnXYXC57LUZqPDReJLaqjPuYmt
UySHw4voK7iAyZbNrJB35nJLF/0lF7HauZn39jhztWWYiYZUjiqo86HSaW7/
tmcEE23c97Ng99b9KIYIzqsSbWyqpiQuhEMqO/jksBc32j/nfJ6vBRaYG+2n
oz6bWNW9mK3YzqFbJdS0DyJ7dDZeHImLyVZ2OF2ltL6Ggih91HUVsLta86Xp
RS905XDB2pJ9SsFcqW+m6n4U9gf10bK9TddEJwX2BzBffQC/6tGHeW1E3gMP
81anReGopc9Bm0QaXsXz6e48YmwPI6cQyGVZeennOaqtj8bhW1TMz9F3/zjW
gu/UzhUvO0t7itGuejI9jTHcsZY9Z/Oo7R17OHfmP5uWS7XsmXxmOA76u9ni
n0hVc73wpQ6joq+ITWL9G6Hj/bkY66Ai3BydvQpssT9BuL8dhntU0Dp6hcy+
h89UphvTOHlEkU8+VMXeN4vu0UbBS8Jv+fBDVmnaEZDdtHj28MzCDM3R1kT4
O3Kld2nRW5imP+csDmprefu9X/Gh+M2HH6zgZ9//KZ/qeHGmc2RRL9xd0xBN
dWdcbX0ICU+nraeRLI9D7JOVsVMX+wvxJIVbor9G/H6TiF8rpru1gMjDO3nL
xInApt/hjI51UnX2MPp797PZNpgzAQ4cklNGw+4SaX3flOdG84yLdfSGryk7
d21k/fr1KGsKW/JaAY2yAT4rbMGgY3jvVMHS3QlrVXMs7FIp/1J9/FkGis/h
etSIj1z9OWSui5ytB3cHBWFMd1N8xoWjh5yJbpp4mLfk/LK8euy1cSN54FUZ
X7MMlopx62zIRy7+mFjqs9vKlTuL5Ym65J/D3UkXl7hl/DzZRW3iSTEX5JCX
l2ev6TF8Upf2Jia7n0k7ntrA3OwgDZFueMkdwDbYAxMrG0xP5ND+FXudYnZ8
mJ62Jhqa2+l6fM75i2CeyeIistIKSexoIDX8MlfP5Tx5Ni/80tvmgm+Vjbna
M7XE1eO0hxhjoqOGY1bfYrZHeuFjX0gvfJbJ9DiSL13nYufnj6NZ2Xns7c2i
jW10DY9LuuDPYG7x7PX25hbaB0bfmPVxdlSsQY311Ld10zv1uyfW7NiTvD2f
k/el1E1WXpOsvC56Jl9ReWKNnhzqpLW2gZauoTfnfMbXghm6HByQ+1SOv/Nw
xzf2KlFPPY8aoc7PkUB1Y5yTcimqqKCyOIs0PSP89d250PIH2A+z3VS6nSPR
PoHKN/11aQkSJPxemGnJJ8TuIJu1bQkrbOUZxpgepDXvBmc8jmJjYyOCPR4h
N7jf3P+H2RDDTVRXVZLX9k3xcSRIkCBBggQJEiRIkCBBggQJEiRIkCBBggQJ
El4D5meZnZxgYnyKmdl5FubmmBfhmSf5Cwvif/PMzc8z/4a+2zMv09edGGd8
coZZUcm5OdkZ79KDawkSXj/E/Bvro7GogPSkdLIz88gvyCcpp5SCpl7GmWdq
oI221lY6xmZYGO2loSSLa2lFlLWNMPeZ9C8Xs0z21VKUn0p8ehZZWbkUZ9/n
fkExRaKusm+nhttaaW3sYmD2DSXH14H5GSYHumipq6airpH6vuFlWl0LoptG
6Wtvoqamloa2Lvonvoz7Os/0SC9t9dU8qK6nSfY+2W9dIkTe0b5leQefziva
OzHYRWt9DbVNbbSPTHyBdzdfpKpTjPe20VhRRnVd0+/WBhbr+NRgN62i7yvr
GqjrHWLkqbE4z+zYEAN9fc/oIi9MjdHX1khZWRXVTR10fRX0dxfGaUyOwmyP
Pkomp7l2KRw3a3n+YoMu+kF5iDtFfbQdluZHOJ7fzXR9Gif0V/Mnb+3CKKBQ
pIr0C/aL6d75X7KS1ngj6ef1WWGkjFL4ZW4EueK65V/5maoitvc7YLSGBOfD
HDINJK7vK3BvXgUWZhire0BOxEkCj9lz2MEGq4AzxBQ1MzQnGw691BcmExYS
iIurG76+gVxLzaVl7HV+3LjAzGA5efGBODkdwdj2KM6+V7n+YODZd6qem/cK
saVLeWfH6arJ4EbEcfzc7Tnk6IxhTAo1z2ia/56QfS9Um0lSoAMuZsbY29li
dS2RB8/TBhZ9P95YQV5kCEFuDljZ23DYL5Tz+Y30C36fHesXdS3k3gVxb06E
EtG2jNenh2nJSuKknaj/oSMckenvJhXR8abr746XE2YoxplRNBVLVZ3vyOSY
XSAmPrmMMkKtuzMH1Y8SkvdQZ2Ey7zjGykYYuRYK+2aYWg8XDqo5cSq360ts
iBhK5adREXWxvFS/9Jc5Bu+7Y+JuhI1MJ3m4img/E/a5BpA48A3ll6lGbh0x
EeuJ7aJebH/xKRy2/ozVu0S8c4rJ7DACPBw4dK+VsZlRuq9b43nEAIfcvtdX
x9kByqMN0TLYh21eBxO9pUSaWaMsF0Lq0MwzeSsuGqOlL/c471lzG5T2niJp
aJKpymR8RdqvDZy419HC+WAL3lY0Jrjj5dz/hf4srrocQEnDhouL+rsB6Mr0
d8NTntEGZqqFe65ifdtkRnjPKIPlkbjteYdPNpoR2T4hlr904jwPseM3v2bl
ngNPtBiEXT5aehVfdX1U9Jf0d0Nk+rvKuN7rfrm22MtG931cNSzYcyCKzP4x
JufmhYU2woPr98m4Wki/TC93oIeO7j4Gxx5+NzSZ546Ris4iv4yJ9LHPpC/a
q7LzLZqbqG9oeaiVu2QDzgsbb6CzlYaGRpq6+xmelmnsTjMx0ke3uMbQiGA0
cb32lnY6+0cZe1GNXVm9sj1ROaKGWmQmXaNTzMk2iIZLuHQ3Ec/0NmYnxD3t
7qJrcJjhb6p/1JOJ/6H1/FrFlMThBdnHyWQcVWHre/swTGuhM9yJELVdOKS1
0Tsp5nLTFQLPBmKW2Pb66tibTaCJNhsU/SlYNJsmaQt14MiOZRpTj/PmEGwm
8ir4kf8o72lZ3h1suyd8/KNGmHyijkNJF2PDnVQmXufGqaukD72Mdf+R/u7a
Zfq7Tb9df7cvj9OCe96V0yFuSNb3PeT56LHjp9swuPuof2fpCPPm7EE5fB/x
y3P1d5O/Gvq7wqcIc1bm799fzfqjIZy7eYfUgjKqypvp6uhnoruOoqu+HHUL
JDS1bvEb86f4paeO4qt+Ij2AEJEu25GZ6Cgi5Vo4x7x88HK0x8/vLPEyrdyR
TqqSbhLpHYT3cR+Cg8K5lVpKT1/bosauv5ewYQMvcC3yEhEyjd2QOG496Hvh
7+vmauLwP/AW7/1mNRYnL5FwK538snKK61pobhtkuL6IRH83/M5eJ7n/GyP0
8jRG6rkS6I3G0SiyZIcaTbdyz1aRLR/t50huJ6N5p/Ba810+eUcXp+gbXAs2
xMLzMKdqXp++93xTIscPWqMrd3dJ22SGrnOu2MhtwfBm01Pr9XxTEr7aVugs
z3v+GEf2bkYuKpZAMzV+9WtdQuNSSL9zi6S0TCpbh1/SN61fUH93tIn4UD/U
bcJIW+z7DjLcNNn23g4sMh/x5gxtEe6c0VrGL19l/V3Rnt7i87hqfsQP/uPf
+D9/99f8409WsN05hpQ6cR/GuqmLPMCuldvQc89HppC5nF/Gx3sW03ev3Iqe
Wx7Dk43cdzzAyu0HcbxfR/etI9h/tAETm3iy49zRX6eBtUMRvUOCa1y1sdyq
iUlCIa2559Hf/CP+7i/Xcsg+k8aiS9js1ERd7Tp1L7rUTPdSc8EawxX/xb9/
91/4+//vH/iBWJdNLqTTMDgpkmtI0NnEISVDwtqkr6Zla+V0WSKu6jt4R8+J
q11iPI+1kG8qx9r/8Uf82V/8Od/629+g4JVO5/Tr8/Mni09ip6GGskU2D1lt
gaFsX/T1PkUlIP+p8x8mS0Jw1FRF2TzrqbwGemv4mak3Tsrv8L/+13+zWTeM
hJvu2Kh9ylqLi+SPvoxJ+UX1d5dD9H31PXx1dvPf6tZcfHy+1HP4ZeIrrL87
O8n45ARDPe2Up8ZzzssKjW3v8c//+yMUdK5SIehyJtcb06X9Fpl67XJ+kcVn
8o5jJtINXQoZKY3EZrcKCua3aUQmSV/O3es3uZkQi62xHL/RdyblkdBOTxru
Okqs0wuksr2IY3o7WLFMY9ddT4eN+i+osYvM95piSnbGXXs1mdejCLA+gML7
3+Wf3lfC8kKtsINmaXY/wmkzPcI63uSb8jowx1RnIXdM1dHYZIx3Zuti/0zU
ZZFkoIbp5q2sObCDt/75e7y/0gC/rI7n7K2+GkyVnMTh4NP8MpIZgKGBMhoh
RSxXAZsqDcFJ62l+GckKxMhAiZ+YuuC868e8tdOYiMX9lgnaneywfX8nJqmd
zxb8hfHF9HefYJ7pnlLu22ij9akOrvebl9noz+GXgVLO2W7jra+i/m5vGXnl
JSR2PpnEs6Lt/vrrWatnQUzP7DN88kw83wNjEZfxy0B+AHra2hj4FzxZZxbE
2teeiquGPlsNoih6ZOB2pOJy8APe1bYkrTYXVy2jpzR2j2kvaWK+IL9M1FVS
V1lO9WMDeobRkvNYbTBAX+EOFSLe6G3FyW88vywwM1BPfsAhDumbciy3gcHR
UQaGO8h1t8V9vzXXemeYH2mnLNIQuf/4DXL7L1L2mkyY6bIIjmocRNHg3tLe
gpjH0c4o7t+E9s36p84Tmy6PxEVTEwX9ZXkvOHNg/0b+MeQsvgdVWLf/BLlz
D9O6LrmgvGsN2pcqXkJNv4j+7iOIvh9qpDjkMBba+jhk1jE0JtbEwSf2S3u4
O+HL91+mhA/roYHCc/R3N7zp+rvtdzl9/hyOt1uevDOwMEKxsw6+ZtbEdM8y
JfjEWPkJnzwb98BkiV+GHkRhqqrKfvub1C3a1HOMVzfSk3ENd20tdmr4kjS0
1CHtKTirb2e1rgdlzXmCT3SWaexm4ib4ZauIF8n4RXYOZ30FTRV1dE08f8d8
LOMK1y5GEdM++eT9g75cPMxc2GccT8nCI37R/wbzywKzgzUUBBjhYGiNU3Yj
/W35JCQnEZtaQELAaTzMr9D8qAMn6wh0dOBTtcClOfoa0J3PaSNjtu8LInNx
Oo3TFH4EU4U9mGV3PdS0baihrk8Ywj2FnDkk8soFkrGYd4KmCFvM5HezMSmd
aGsj9uxz4e7iuXmTtF5wRGPPRgzi615CRR/q7x7V3Y7GmUd6v00kuhqiusWA
s93TzArObmmoXtS/lL2tOjtcT/EpU47qmGKT2UC/sNvvpCQSde/R/u4UHadc
iDywD5+WR7rI/ZSeMFjU33WveqS/m0iAiTnyColvtv5ut5jjGibs2Bq4qHvb
0NpKS8lN/PQO4ex2iaqRYdquHEFl7W7krRNo6ut9HJeziKOmq4vWq7aoivh+
q5u0d9cQ4a7DR8pa2CblU1VdQIqxNzecIkkJcMV+lxpaV1Ioryok88oxjOTs
cHPNpaP4MqZbt/CBggtXW3uESXgJq11b+JWcK7FtI8xPNpNpsA2NDVr4lT3n
jDSBqWwf9I5osTfwJoXVdbS1NlB5Kww9y+PYX6xhfLiVDBslzPYq4pLVyeA3
8RnS7BBVF4zZ972/YcWPNXByc8HBSA5te1vcypvJFevqEVV1/PMqaOloo73g
Nt6HgjlsnU3P51/95WCmi4xTlmjvP8jR+zW01WdyzVYTk4N2nO0YofeeBxa6
chy8UMrsbA9ZoYdFXs0nee0OYqJpS1B7N9Xhtjhul8fiVh7N9fkk2uhweP9h
QurHP78eL4CF7lwuHbFETj6Ya40t1GZE4yzsEnWLhMf6uza6uxf1d6fmRqi9
dhil//h/+eVbqot973hIAV0bC1wfDDE3PkR3o+B6Y2UOv7MOg1ul1LYPMCLs
/+GMCOz0drE1MIma1kbyL1ihoiePdULdG6Mv+Fz05HDG2Z19K7SxMrXCM+QE
HjqqmJl7cr1xhKnGbGLNzdmyYh1bLDy4effO4/gaLXvOXrvOFYuldHN3rtQN
ieFRzg1HHbQPaGJtbYNXcDhxrcLSmeig7Kw59jpymBzez0YjLayulNDd30Sm
mxF7V6zgk+062F6I53aYObqrVrBio86ixm7/VBfFvka8t98c27utz23KVNF1
Iv0M+MTQENPDRwk94YapiiUmTsnkj83QXxiDt9YaPlyxCz3HW+SMvOHvJr0K
DFVySfhFK0RfLw/77L241T/HbPcDotx12at2kOCIUPwM7PG0ukHm8Ovtq/nu
Mi65uaKoYs8J5/+fvfcAqypL873v3OfOvd/MM/M9c+fOzDep74Tu6Tg9Haur
u3JZllVmzAiSc84ZlCgZJIMCiiKKOSEGUFGiSFABQXI45Jzj+X3rnIOKsbXG
QPWc//PwVG3e17PW3mfv/3rXZu/fssHPxZmEMtkMaIa+wv3s9LEkMKNWfm3N
dVdyLDgADR1Zri1+zs7ElypmS3OiVjsea89WPW0ife2xtbUh8Ebja2RLzoix
8DBBflZ8vDNKzvvd5OrP5Qf83eKDBIlrwe9sDTPDdZxNdHrq2Ku67uR07zRj
DaVkRjmycfNKvvrqK7T0he+kF1Ivqxun+2k4EEjoFk22xwdj5+qOfdy3gL87
Ocr4+BhDswrmantTAy0dfQz/p5mls0zL1qYenWDkibp6dmqCseFRpiZfseDu
L+PM5Ysk5j27IpydmGB6fEJxz7q7naa6ZiR9w7yekeq/kGanmOgVdWlDEy0D
Q+/u+E2K81LSTF1DK52Dv2dth4W5A0/ciZ4ZF+dDC01NbfSOvpnR/gHvt65V
yd/9Vko6TU/eUQ4eOUR663+FdUSUUkqpt6a5fu5XVHLrTpuyHlFKKaWUUkop
pZRSSimllFJKKaWUUkoppZRSSimllFJKKaWU+hZqbqwfSX0VhYWF5N+5T+vg
M54/muinpaaMXJFTUNVAc/9r5pf+ZyRn6rbR1tz1jp73lzI11EX9nWJyc3Mp
rWmg+ymWgZTpnhbqi3PJy73F7eoueqff4YOXMv6ujAFbf5/q+iYaeocX8HcX
5k0w0NNLe8cw7/wVulkF47bpXiX365tpGZp4AeNW5Pa+ZO7r0NyUaE/ysL3m
F/ZthsnBbtrkx/4J9vEzYsMLuchyNlsLtbX1NLZ10vtOuMivpsnGAo6EWvGj
H/0b/+vHG3A9XsXoY6faHFO5+3D77Dv86fd+yM9twknMb35r7+r/XsmYun6u
2DvGca7vXbjeND1lGYTpf8rf//Wf88/rjIivHnr8/JoboTbZHvW/+G/8f3/5
CVt2nCNn4B05tIwBW19B0YHdxAR44uLlgVtsCsfLW+T83QWJzDbkkeYbjUd0
If3vprcKyRi39/MUjFsHGzx3eOJ6JovKgWcwbp/K3SFyLz8797X0bUrO382K
e9Se2+lLVDyrPXHsx5uquJWaSFyg2AcZfzc6mfSSJoZmZkTs3lOxwyImO1Wk
Yoxvvn2N/Umx+PkHsisihpNXC2l+q1zkb6i5FiJDbfjO//o5WkYp3Fj4Xs5M
L7VO5uj/z//FBwbOHOlaZPszdI+0CFu2+r9jpm57Fnucl/A/froavT35dC80
mN67nPHW4vt/9gtWG+2j9F0Wf5NNXNjugNND/u5uvFV+wdLNOzjRseCd8oku
Si1N+Pr/+RyDXUW8PXrd05L25XHMVxMdE0WfB4sjMXRbz7bUG3TPPpmbz3E/
kWu8Xc7DleUau6mgduDp3NfSt/5CBX/XwJ307kf8XdWUnOfwd92wX+1Eisjt
r9hP4OZfyvm7x5uauBboht1Kx8din4vtNMkkk6XpJIe4Y3qpmZGZUXou+hDt
aohL/lt76/Sba6qRgssniP5yDbYrzQi82sHDyqupkCsnYtmx5Gu8NB1Imz8H
pTNinOjrpK2xkZa2LvkaFo8uKTH2TYzQ39WOpKub/v4e6msquF17n47+Prp7
+hgaGWFE/L69tZ3O/oWcXfFvx0foa2+lobGFdlG7j84qfj8zNkiPpIWm5hZa
JJ30DI8xMT7KYHcXXYPDjE9PMTHcT3eHaHNojBnZPEBsy7i+faMTYp9mmRob
ok/0qU/kjw4PiM9ro7Wrn+HJGaZHB+kT2xKxPSS2X2m86yjh6lE/Vi1ZzUZN
P848XJ9gmo68q2Tu9mOdpimrDBMonT+4smM42teFpL1THIN++lruUVdTI+rr
qTcz1sr0Av6uy/UHjKQJesvPEGD4Cf/jP9ZiEPUu/UXKUO4uzDxXYZnRpPjV
ZCOpAbp8omHCsYG5x3PzIrDwXInFucaHuWlB+nyibsTRJ3m4r6NvBdFYez7O
300PNeST5/J31zzG3705z9/VPZHJXve1vKdq+lhs489VMLzSRNeRMFK0VuBx
fZ6L3JrJ/kORmJ9tfs379AY0Uc+13AJOpkTgpKKDiUEm9bIyRTpF6/mL3Dhy
kP0WumzXeuAv0/RVXOdYQgQB/sHE+0VxKKOIumGF98gYFxUX0jkQGU/i3lgO
RIVitEEFFVtLdp9OJzo8kpj4o5xJPUpKVAwxyRlcquyT8zNmBpu4ezmd3bsi
CQjeRdie05yt6GJ0pJ3K/NMkxccRExeDd0AooWeyuVd7m4sxwUSlneOWpJ26
/OPE+oax51Q+7WPdNIrtyOBIYi8U0yIdpb3yBifCwomLSOTUseMc3xOLb+w+
Eo5mc+NsBqfEdkhsMrE37tL5KvdIJEUUFpzkkL2T8GJtXM43Kd6bnxDj0oWr
HE89hp+dzSN/mR6h7fYNTifvJj5RtLcvjjh7FcxNLfC63sIbm1kP1XEsJgx9
n1Tyn+DvehbJ1n+YY1Zyi1N7DxCw0x8zCwcM3N6lv0zRdngn7joL2N6zXeQG
GGG1Tp+4tsnHc9N34qGzAfsFuXlBJliu1SW27XW/2/gsfl33C/i7jZzbE4Gu
WxLXZXOE6Xbyg4xY//56tC/fJCNRxFyfjK3DPk/CaHkqsav+lk9+YoJHegYZ
yc54BFoRWTX4mvfpDUj4S/a1Ii6I+dzuHev5sZEDqc3iah+t5sKZq5y6WMJ5
Zw3stOf9RdrFVS8jNm91wu6OqCXcTTD+Qg+3zAZmxPnZe8oTtyVf4eSRS02G
Pea/+gqt1cEcy7lE5tn9WK7+CX/z/36NnWceDaVHcN9ghIHhWeqnR6k6boPG
1hVYJpfT2VZCnL4xOkYxFOQcxDV4O5bnaxgZaCApyAF14TG3Ous4b7oKOx0b
gpv6xRCRhM3q1awyS6J4fIye4mRxbn3JSotork1NM9x2hwz9lXzxx//MEsvd
3Lx/h90eW/jrP/8xn5inkCu2E1xV+cLQhoOdrzAXlOSTW5zF+etnCFbXZrPO
EcqFP01VZnP+0jlOV9wkysb8ob9I2y4TaK3LUuNoiu9mE6r/IcuEB/udzRGf
0/qWmB4zTFVdItBwA7809+ZE5yTS8Q4qDiVyOCGd2+Un8DUzX3z+MtfBlSAD
TIS/7P59/iJyr4YYYyL8Zfdb8ZeX5+9O379GlPlmfqrvSnrH5LNjei4cbhex
MQl3vHRY9Uf/XcFF/svfsdH/Gu1vkYv8jSX85Wp2Ppk5TbSnb0dlmxYOx+4y
UJrJhcxMzna2c9pFHVOdB/4yyP2zKewLjiIx7zZl58LQ0rbCIrSYPnFltNrb
E6RqSWT1KLRdJVDHHQOjDOSrEvUUyTm7H1s84uwGmZux2mov1d13CLRZzo/V
jYm83UBjYxXX9fUI0xTHPyMdXysd3jcLIf7UWc6fvkBBSTV1MqZukAdJjpbs
k/VNfF6IpTkqpkkK7l1vAaFWC7ZlfNOE7bgY6uFTKFvTR5wje9xxNdDFW749
TXPIDpIdzEl+FcadzF8KrnDmfgsHQjT5npgL+VV3U332EpfTs2nvKyXCyuKh
v0yUR+FiqouRXyFjMx2cFzWEobo1Bzrf1s2ZOaa6yrgi4++utCY0r1XMJydo
v36cqPhk+bg4WhrDdm09DCzz6Jp9V+sBP9tfrgl/MX9Jf8kJMcLsLfrLS/F3
eyq4sd0Mk2Um7MxZyN99POZ3rVnU9bNMNJeQ42iM41crWCqOxQ++8y/89iNj
QnMli+dvLc/TpMxfcsm81oq09SoRmrpoG/hx8MBJss8U0DXXzhnHLY/8ZXqY
lpsZJHuYo2tihd0OM94XMcuoYrql07QfcUPVaCv6B3OpyIhlh5oPUd5VCh6v
mP/LOLvrrQ7Oc3bFtqkZ6y33UtdeLLxnCd/56AuMxZxm164QPDy24xh/ioI7
lZR722D87z/n5z/9Ef+wbCPGx/OomZmiMcyVBKd5f+nKJ9jM7JGf9BQQYrHQ
X6ZoCXMj0c6CRPkaAmI73J09tubsmd9u3OXO7lf2lwLyCrJIahyjNzsYHf2N
vBd0gAOZl0nO65T7atgCf5E2XiRE24wN63dTVJpNiKshm7zDKX4rL4fL1jys
p0TG37WwJ0DG3x0dYVRSwX7/CDQ1Esm+d4+bJ7wx/2gFm5ekcLGpm653ghSd
FtewP+7667G/IlH8SnhGbqABtipP+ovIPR6Ah9467LIf5eYFG2G75k34yzfl
7zZxO9EFZxNzvGT83bER+uT83efEBjsoj9tJkIot6eJLkI50UJ3ugtaPPmLz
6gPcXuwlzGQtWVk3OCdb42mul1JfPYx++k/83DOavffE/G66lbMOqsJfHOX+
Im29iI/ucn5j4ENGt5hH3U/Fxc6LLT4XKOsW+34plTBHDb62dcRieyA+p4uo
erAehPATOWdX+MkDzq5sW0Vs3+8RcxXrZSw3diCjX5E/N9RMS2sT1fm5FOdd
5Ybs3nqd7FpdzRfm9uzpGlP4i6OVwl96bhJiboWK2byftF8l2NhQbCc/5i9J
Dhbz/qHwkwR7c5Lmt5vmtxMlk4q/dzbW0FxV/1zur1yNuVy/mklyvRhNeopJ
ttTk/b/4HNvwk+TI6rTuQsJFXbXKaP7+S08+ce6O/PoTUxwc3AiKPsKllqE3
+5yGXFJmBmspjbVV8HeLmuiXlJCZncWZizcpyzpCWFgUcXFxRLqosOJn/5ef
/s6agMslVLwpbtILNcvgtQi8zTdheqBy/p5WI+d9LNDfaEdy5yijLbW0VNYi
mZhmMCcSH/ONmIjcifncTD9L9NfbcKjrdd/VWsDfTXmSv2up4O8Ot9PaqGAF
K/i7DcI/HPEzs8cjv5H+9nKyrl3i4NVWeexO0uOxbBE7klXC1b378Tc7TOOD
E2SykZQwf5ZuCSV/kf1Jd6Fkz9e1l50m1D8Ml4iLVLUPiXnRfjy2vIfKjigK
h8V43JBHnMFa1DcasrOggfbCFELWqGOkto+LdXXcPWSJwYalfK3lzs6zmZw6
EE+ihyGWscns3y/mUUdPciKvjDvt3QyUHcVhnQqfagZyqk1syzm7KnygFkiS
RHhTlCfem3QxOZlDZb347FPBhMvuER/eTXygK3anbtPQWEdRvDUJ0aLGamwh
z10bJzVtAos6GR+XsDdgJ1+aBZNa08D9y3FYLF/BF6uCOV7XS19XA1fstbHf
oo5nTh2StjquuumK7fVsz6mis6uZwh162G/agntOAyNiPCm034TR1wZE3H3W
UyBSpsT4UnM0BD8vdxwvVtAx2k9tiKi1/mQTvra3GRnpo+VGCuaqm/hQ3Zdj
jd2iVihib2wga+wjSRbHKCU1nVMZOdyq6WTgFdasfGXJ+bt2cv7ux/9hxM7g
ANFHNUy9d7Cr6sFdFjGODnVTm+GDoZoqakbpVDd1vrNnAqWdhRxydUZNezdn
mlqpyzuEj7EVRu4XhOd3UOKlhdOXWkTVjMhzD7uJXK353PzD+JlYYuiaqeBM
vva+3eSIh4K/e1rWXkE6/jL+rtP5Z/B3R6g75YbO9/+c3/5QH7/gQHztNcUY
7IxLuYS6027ofv/PHo95OOFxp5nyg97s2KZBxM0qWjokdNy+SpxrPA5WN3i3
qzK/WJMNBaKf2nzwwQd88LkxO9JL6R+u5dLZbA5dbma6s4ILMV4YblFFdetW
9LbHcKmonPIQR5w2aGHl4Ul0qD9hhsZofKSDQWoWV5Pcsfjt3/Ob3/1O/rm/
ff/X/PWv16IdEM+JQBe2iN99ts6UHYfPcTHZAdMlou0VpnieKqd7spvqgy64
m+pgvtMP1/AEYvKaGKo8T4KVHpu1PAgO9cU8IAz/69U0y7zRaCkffbARc59M
cocn6MhPxNHThiWe/vgHb2e5jjofv6eNR/BFcs7tw37FUj78YDUGtrEc2p+A
o/pKeT83Onhx6vRhUf+sFvGvUHfZz82GJu5E2/GRqh3u2S3POILT9BYfI1Rv
mfwzvrb15+D9ISbvnSP74lHSW8YYuH2FCHGOffDVMj5WM8Y17gQ3rp0gwOgr
/v3Xv1Ec+w9+y8/+7WcsMwjisOQN3t0dvMeRaJv5Nh/9qHqGkvnw+cRZ+svF
/M3DgI/U1NDfbIh/9GmuvKtnAmXM3bJU/HwUjFsbB1M2uweSLatxJ7soT/bF
x9qXtMZxeW5/+UF2Lsjd5BZAVv+bGuRFe7cPEeBryUd+Udg6ijmvi98j/u7N
gwR6m+B7Zp6/u8fxqWO/WeRnNdY+O+bsy5meWWZ77nE8wop1mrrE7k8mRswX
Aq2Pk/Na1rldnJJOKji64zKOrvBqqVT89OQRYOyNid55MV4oxjvpeDNXLTQI
1PPgXP/LjYEyRu/Ig8+WfcbsrPxH8fthxiZfXOvOzUzJ+zYhe4Z6eprZySmm
pN/su5AO3CYj6yK7c1/TShBzXVzx1MNdzYxj3fNrdkvH6TggxjFTDdxufAue
mXoHmhkZokvUrnVtnWIcevF5NDMyrMh9kzzche29Df7u7BSTfbL3Ohpp7hv4
r8nfHa4iJWgnhjZRnCmtoKamhqqbF9nu6IZ+0FEqvm3LDklFfVJwnLTDqaS1
vC7u7wj18X7EalnglXWLO+IY1VYUk29rT4yhNymNSgKoUko9T7P9jZSfiCdo
hwsurq44ewThc7aAyoFFvVLLszU3IOf+Fpe3vl7u79QAbbfOsTfIGxcXV1xd
PQiIO8mVht7FvZ6NUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkop
pdQ31NzEEF3371JSUEBxcTG37zchedO80uf1ZXyAlvt3KBB9uVlSQll1NdW1
tdyvrqS8pJjiew20fxt4gItccxOjDPX10DM4ytjYMANdXfT2DDL28LGwOQXL
q7WJhsZW2vtGGHsLJ4R0cpQ+STPV92qpa+uiZ/J5zwvPs2g7W6mvb6BZ0k3/
xENoFxNDA/R09NA/Osa4jCHW3UPn4LiMXPbc2Kvunqyv/e3zfW3tfEFfZRil
F+WKYz0+RG9bk5ynJpHx1OYe7MoEIz0SGuvqqG9pp31k4jEOsnR6guEuEW9o
pLGjl94X9OFdaaq1hNOu6vzur/+Kf/2X77PMIZz9Ja28i8fgZCzg3a5b+de/
+2v+4Yc/5SMrO+x27MDd3ozNy97jb1Rt8MuVvBPv+0PSRHUO5+J34hGZzP4D
CSQEhXPoVAG18gM7y1TbPW6fSCU+NBh/2x34R5wgq+sNP5UzNURL/iV2e/ph
Ye2Gu/cuDl+roGvy6W9bOtFHU/lVUhKj8d3pT3hELKeuF9M2Jq6+2T4qzx4k
2HI7AXv3kxYfx66wVJLym5mZ66fqbBrBFk/HXmnvRF9bCy+zx2u+r17hpF29
+8y+MjVMW2EWiQ9zw0TuHTrlubNMd9zn7qk0EsLEsbbfQUBIOpmdk3JGQUdl
IUf3ROPv6Y6nux+hKRcobh+Re8zcWB/N+dmkh0Xi570Dt8AoonPqnmBnLxJN
N3HOfj0WOs4c6njH9cFMM5nOG7HQsCe1XdEXqThmU21FbA/fg11K6X/N56Jf
oyZvJRGj83O+/9P/4Fe/+jVr7Hw52SSnZyAdaaDY2RLzTy0ILGqhPSgI2y/0
cLzymt6NeKZmGCk/SoiODUZ2OaJG7eNOlA0eKkaE5fY8sVaFlIli4X0hXlhl
tTAyPUrXue2Eu5myvbBHXLLt5MRv56vvfJ9f/uqXvP+LTTjYXObOuFQRS9ix
ILbxUexV+nrnJLv0rdG3vIpktJ+KeAe2r9Ej+PqTfVXkRuhboWdxRZ5bGe/I
9tV6BF3vZnashXIfe6zeN8A7r5nOqCjcPlLD/GIbcw1niXC1R8Umm86RHmrj
Xdnyg09Z43uSqqkJmq/vwXXjNkxsr9HWeJ1k660s14tfnKyG2VYu2m/CTsdR
+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
/sQQy92Z5M4vfi57Hi9uuz5rddTx0NLAwcSTvXc7GG++xRlnDVa8/z6fG7qw
+9wZDru5i+2lfCZy4stb6M2NxmfVv7DFJ+jxOnJes62lnHPT4csvZH3RZpuO
J/6nixVrST7QRCfVB51wNdLExNcHl9B4om40vl720x+05hitPM/emJ1Yxu0l
1t4YEyMP9lX2KsIzgzRF+RG8Rny3AV44a9pi73ZVXNdvuFtTvdQkeBOoqsX2
WH/MHcW4vfsmEqlsilxCmk8wjq4XqBLnwkxXBWnBpqzTEh6Tkkik5Q4C7U5y
Q8ainRum8fJ+kjzdid8Xyw5TU3Sc0rguq2/lsQMk7ZDF4vBcGHsVTfdRl+xL
0CbhKbEBWDm5YhdXJL8/NdNexpGdooayP0/lzINcP5GrLs+1Frm2sYWKe1kz
Q7QmhxD2tSrWov7y0LXBxvoy5eJYD1ecIdH8Q94X19ODnw/E9ehlK3xKKmXk
/nmSbKzQ2eiPnbMRX1u4c7jpD+WPHLNMTYwwOjLB1Ks8ezI7wt2zl7l4JvcV
xovnfNQ8n3dsET4T/W3Q3PggvS31NLT2MPgUL1b2HH0PbY3NtPWPvD2ennSK
8f52Wu7X09I1+OLnKGenmOjtVLBo+5/MFf0f7kUi+t+64Hn73x97tb5ODMz3
tfP39HVBbvNTubNMjjzqz6sQWGcmRulubaKurecdrU21yNRVyoEDpwg53fD8
+y9KKaWUUt9Ak/U11FXVcE/ptUoppZRSSimllFJKKaWUUkoppZRSSimllFJK
KaWUUt8aSedmmZ4cZ2x8gsmZWTkrbm52Tv7z4n8oFf92TvxnMQK0XizFPk+8
+j4rpZRSL6e5aSa666guvE7OlRxy8vMpKKmgqrGRu6UN1Fb0Pf/9/Jkxeuuq
uJlVREVd54vfdZ+bZLi9nfa2Hobe9StDsn3uqaemSLHP12T7fOsuVQ2NVJQ3
cP9O75tjEiwSyd4P6evrpn300cuLcg5uews1NfXUS7rpfaWHKN+Q5qYY62un
9X4N9U1ttA1PPp+TKnLH+zpeLvcbSjo1Rn/H/DF6ISv4RblSZieG6ZM00VDf
SFNHL4MPYrL33IcH6X3ACh4R/98jYwUr2NjSmUlGxT62NTXQ1Cqhc2icqcU6
tItrfqy2gAsBm1D/fAmqJiEkHUomwM0LF2MDVn3sgIdF4fMZC4O1ZPkZ8Mu/
+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
ZHnj8t5vMFPLUzwX0l1GsvNWfrLBjIOpoVh/9j5qXgWKWE8Ze91X8921miS0
LcI7g1PtFAdb8emabaglZ1Aorh1Jp7hG75WIcd6PtOg0bg5IyPbRRGeTJd7X
amm9dQofMW9fuUELq+h00vcdxEnNkCWau0jv6qRB1BiGy7ahtS+Lm/UNVJ+L
Ii4lkZjb9eS76+CioUfIrW6GZ6fp8PQkcq0xbpcrkFRl4az/Fd9ZroZPbrXw
iXqu2evgpK6Fb14jHR0N5Ljp4qi+Be+8+3R3t3Jzhx5OqmrsyG2if3KSrgue
2OuvxTjtxjM5v4p97qB0lz1frlJlU+JZ8qtl+9wuztNScvz9Sdu1n4KBdq6J
8UdPxRiPK2KfS88SYKTG8rXbMI87ydGc1rf6Nb1WzU0y2t1MUZAVllvXo3fs
Di3C+/uyYrA1V0N97w0a25spOWiPmpUOXpfq3x7H7glJO/I56OyMmlYi51vb
aSxMx8/YCkOXTDrGOyjx0sL5Sy2ia0bk65CluTizVfNB7hH8TSwxcDpP/Wv5
+7SCv+tqvplNe3JoaG+h7IgrOhbquJ1/wN91fsTfzdmLm/kmNj7MdUPXQg3b
8/cYqDpPwNaf8ne//A3qwRGE7BQxsx0YRRQxVJHALn81NiUXy8/L2msH8NQ2
x9guk9orKQR+tBy9rZm0dXXQeG0vnuq/5WOL7WQOLtKaeqqHhtOuOK74gi26
vkQnxRCgbclOt1Suydc2H6ej4ADeaqZoq7niHLKLQG8XrDduQNval3B7W9a/
9znLPnHC7bg4JhO91O13xlhdnRVO23EKjSZY+EHLreME6n7K+++pYOqVSdHQ
HNPN+SS42rFV14btvm5sWL6cX//qV3xu7UJkeATWX37Kb95bjq51NAf3ivN/
8zLee+891tl5cuLkQTEXWy7iS1B12kemZJje3Bj8Vv8LWzx3Pl6vPrXPvTRl
bBfz3s/YrOlNVHIsQfpW+DnuI7tTsc+dN9PYqWGC5hYXXEPC8fd2w27zejaJ
nIz2RbgWxMtqXELFyV24bFvPxk2bULEJkHOM56Z7qY7ZQYCMgxvjh4m9G06J
xbS/02n9NH2l+/H2NOcD3wgsbY1Y77KTy/3iy53spDTRC09zL1IbxxW5ZQfw
8TKT51qJ3HXOflzqf42Tu+k+apN8CNwoPCXWH0tHl4dMXRl/N90vCHu7DCqm
Fbl1Sb4EblATuQFYiVybmEI65gaoTAtEV5zH7y34+UjLkQgxJ5KxgpuyU0ny
cCF2XzzeZsZo2uznmmzdjNE27sZHErDOhV37E/G2V2epoRN77y3+p0Flz4YP
Cp9tqG+irX/4qfV5paLeGB8dZXRCNqeYY3ZWzCdmn3/ySWXv9QyJz5n8PbWp
+Nyp0WGGJmRM3xlmpqbEf6Xf7Jmu2REqM7K4eOo6jS9xXcie3x7saJXvc2vf
02sSy/Z5QrbP45NivitV7PPMIh0nXoekk4z3S2iueQkO7lvUzMgQXQ111LZ2
0v0UM/ib534jPWDq1jyLqfu83DqaOwZe4Xg+YPM20dIz/MQayLNMjPXS1iza
b+9h8A/hoaxvi8Rc9eCBkwSdrFuEz0srpZRS32bJOL/1lfeoXIS3upRSSiml
lFJKKaWUUkoppZRSSimllFJKKaWUUkoppf5wpODrzs1J3+I7mu+iTaWUUup1
STo5Qk/9PcqLiykuvUNZdT31sueS7t6mVvy/jF06I51htKOGewVXKa5ppH3y
LVztos2xzhqqC69wq7oBydtoU6aZcYbam6goLaO4uIzbd2qobWigruYulffu
cb9riJEXPE/4rdDcDJNDvXS2NtHQ0kZL3/Bj+yR7xrK/o5Xa+w00tvfQ95bY
mApO7Xy7km7R7u9j2j4nV8bf7e+gre4+Dc0SJCML+LszE4z0ttPc2EBTWydd
o5MvxViWtTcw316DjEn8At6uov3OZ7f/WKwNyWNs4DmmxwboamngfmMLbT1D
jM09I9bwdGxmfIheSTONza209o8wvkhO0bm2Ms64qPObv/o//Ok//5r/0HfC
zd0BW5UvMfxKFde9wlO6OqhJc8bk//4t7xk6sv9tvEM120/tYXfM/ulv+bW+
Hfve1ntbg3UUJPmx/sff53//+T/xwy/0sXJ3x8F0PVu2rGar9z6OVUkY/dY+
vjvLVNNtbqbGEB7gy3YfPzziD3G4oo1h2T5NDdNacIndXr6Ymjvj6hPJkbx7
9L5pj5Fxagsvs+dBu94RHL5RRc+z2n3ItJ3P9dr1KFfGAW8o4mqCD37WZrh5
7MDt3DVqhiZheoTOqiKO7YnE18OF7e47CTuURVnX6Is9ZnoYyc1skrwV7bnI
eLvXK5/dN1n7jcVc2+0rb9/dXbR/VsEKlvHkH49tF7Er8xxhKTPDtdy+vAd/
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
qBM+3BjizG5nO1I65gcCSQ6Bhpv4yCSMU8NTNO0Wc1JTfXxvKdi7MlZmsqMl
QaLNeyGWGKjp4/NgDQBpH7d2GOKwxZSImmGmyqNwsbHBKrKM4WFRf/SP8HK3
TWTMV3cMv/ddPlrpQ8LhQxw6lM5ZURvVd39L50ULJZXdshyip7masuM2GG38
lM/dj1BWL+PvLn8mf3fFm+Tv9paS7LSSH25+0l8cWKG+m5vTj+fudV7FDzc9
6S8OLNOI5kr60/7yFH93bpL+qgvstN7AR2bbOdE6xnPVV06K22p+sP4Jf5Hz
duMf5+0+x19uhJtitvrZ/nJjlxlmon5JuZxOoNnj/jJSnIiLrQbft/XE11zn
MX8ZLU6Sx5bGZnP7YCC+G3UJvFxO3a1TRFl8yB/9+1I0U+68eM2yt6X5+ZGV
nitHup53o0vhJ7ud7NgrmWKhv+xta+SCw0b0N1iScP/BHgkvCHfGSVMPhwtF
lG+3QO8HP+InP/guf7tsM2anxbU6K+qEIGeSHrIyhYYrCXTYwL9p2RMrGVWw
d+2tH7J3H/hLomjzkssm9NeZE1cz/LDN1kg3XDS08czrZPzmLlwjPHHPaX/F
A6LwF42lX2EpvOkFZ9+3TtKJITrq6uTr+MpQRcy2cUnMid5/bwtrM/M556X5
TP7uCp2kN8fflTEsfbTQ2GA4z1RGPj+Kd7Rn5bbd3HqMadvMRV9tNNbL/OVB
rvAX4UXLNGO4ejzgxfxdURNP1t8k3sWUpdZeZDb1Mz4yRO/zbsxNtnDZXxcN
FZm/zLfXp+DtrniStyvGy/aTQXjqrsEqq22+/U4xPzLBdpUa0Qn+T8UKhffY
rtBgf/YpQkwMUDO9Mr+GkvgsMc/RV/2KPwuLJsjUgK0mV+bXTxOxEyHymO6Z
+8yKeW3thVTCbC0xDPLFz1YTU7W12Fx/N0TTp/Sc+7uPa1J+f3eP8JP989xc
2Xaisy0h7V3c8RFz4pU6eF9vV9xTn+nippEWZstM8D50gVsF1ynoGaa/tkD4
9Eo+sRD/tmuMhl3OYs5jQ1KL7DOlSFuz8dNfxW/0/DjSO/4Ue1e2neRgSYBo
s8LfCMPlWnjmPGqzWPi82VJDgkv75P7iFuGD+7UFq9qJ82u0tR5JXfML1gwW
PiX8ZdvSpRhH3/qDWiN2tjqTEDFf/7WmL2f7pTKYBXv8tPjvP1zJqqM55IYZ
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
a9YMltkc5tadQdgIXZnb2BbpS0jxs9/J+FakVDA4pKCntZ7iC4fZHOLE8q/f
5J//8iMMLY9SnrcFrzl2rHLIv8PyHMwIwUZ4jlliLuUbxTHS18PnwjhLZayB
s+5LcdZ3ZqeKczdMTbAnye724wxMsRzidc9yrVhOmbQsW+eNq+kKArPVzF3Z
Oo9JyyI+zIdkV9tnmhNJlb9cOE2mlIqONIkc15IPX53BZ6s3s/N0OmdT1f7S
W3yW3RvjCNqfxa3CVLwtXJhp8QLZsy9NYszbfpNLbiaYfmVF6OU69f2nsTHV
vcWu9gZu559itZkOn810IjG/5SXdn3q4v1wU/mL1lP7yAH/3z5HwgK3ec3hl
3n3+Ms7jzRm6N3abFDv3Pn/xcmXWTGvcPbV5Ret+f3FjxoKEu1zfUQXdt8+x
xnEh74kx2N66SW/lKupIC48mcEEiRVO1/2svoeBWMecmcfVHWoqItJrGxzbu
7NnjzXLdWTiuK7zjL4r8cJzF2Fcn7AzpzgYYfGZCYN44g1Ip44S7DtYGE/6i
oGqNG+vv+IdYDndX8d4nlmv8XUl2nCgfeoC5KzExN7jcXa5e68l6t2f1lwvC
X86o/QUp38xng+ts3nr/TV73TSAyQ2LBjDBUe430jcHoi7xl8SIr5n9uhJ7J
FrLloq8fmaon8VklzRVYS1GCHQ7mNgRmVdIjH6Cnb4C+hmqqSirG54dR0nJ8
DY6/fAs97YOUvJTdH6Zhn/AX4/k4T2LqpoeZ4DT3fn8RsftDHsLfNb3L3/1z
Ja7p86HG6GpN9pcJHm/ivTxeEXshbAW6c+73FxG72JvY1fbozp7sL1dJEWXT
FyWo5zkaG2aopoAkH2s+sfTicE0Xg/0TrOAxhssPskZcV0vdLzNFZjp6UA2p
bNq7m+CLDXcZkGN9FIfYEOfqyeGTG7A2McAq8sr4vfoR+lJD8fnKDveV2ZT5
WeD6kSm+Z2Wop1+p46izNhZi/HOvv9z1k+oA4S/2jmxqGFbxEvKtTAle5siW
SYzdyczdqggP4Sd3l1X+4mJLSqOa1zwgq6axqp52xaMvgJ6ss2ScPsHFO2PU
Ubpzd7Dqq5/w394zwv1Ci4q3nOOhh/b7y3DPqGNQeOVBrzX46UVxqKyO6uop
moM+k8ZQ9tZwfaMLQY5eBObU0dNyjbNpqRy5dJWzwUZ8/clyfHOlu4oin8tP
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
wQKnZK6VPuHGehkf6zoRcL7q5c7qqqIgwhl9cf7kz5Yi35KjWZtqL6FgtTV6
f5nC5KlTmaLvyPYTZzm/xhGdyX/j3/7VCfdd18asY40bWu6yc4ONug9GHzpe
4Rx9ugdzRzE7N4rr7BLCAcVEeI+6n6aCFAL8JV3sjdjLzZnrHsxplZire+sp
SPTH19qP7U80+tpNhSkEjtg6SLauQZxSvcN5fUTvO3yePl5x4di7uiOL1uh9
D9QUsisoHLnjUe70a2xLkoStzuJntg7RV6kbbOZOWhjLXrgOnxk6s/66Ajqr
KIqNJGy2Bxt2JBHotJivTF3Zcl8l5rl2yrNSSfJ2J27bJlZam2Ngv42z73WP
h3HEQD99HW20dov5fLCfgV4xnw8Ov/Ru3nvD4CvqHxj6ZeuS7fc5deEcO67U
vt72/1sM0tXchLJR9f72tP8F6G9vpf5xsVoXW/GaByX97T+tr/1OMEpfvPx1
et/DfSO2Ja+3HYNBujuVVJeLOmoaRcw+PCZP0vuuflJOhaLt3WiYa/GeIXzf
nH3s2p1KaoVW81cLLbR4hxhU8bDoNjmFlRNq3tZCCy200EILLbTQQgsttNBC
Cy200EILLbTQQgsttBhPDEu6Kf199Pb20T84pNZFUWvIDg2P6MkOqfVkJ9hr
guOHn+svLbTQQoPhAfpa66i6d4uC69e5VlDAjfullDc08ORRLdWlClpqKynO
v0dZVROd4zR8pO/BWlQqGtp7GNdPeqT+aquj+v4tCqX+ys/nxr1SyuobKCup
paKk+dd7v/AtIenBdrW30SbpcvVKul2ttLc9/X5Bowkr6cXW1dWjaJb0t36d
l7fUOrWqRmqqNVq0ba/TtH1m2zLWdmiA3nYVytpq6hRKmrpHaWOKvL6OVprq
62lQqmju+WW6mcP9vXQ8rV/Z8vNtHfhp25/LExdCrb+rkPR31W3tG3NPDUv6
a60iv0GBoqWN9l/pOr01hvvpqy7icpQuRl9+zgLTcBJTEwl288fNzob53/ni
Zf8j+4PM+ei/f8hCtzRujNPg7i85RVJYCNbbr1ExXi6C1F81d7gaa4Dp1L+i
YxTKptQkwrz8cbGxZdEP3vjZXtV8ezYB0VN8lTPbo4nYcZCMo3tIj45nz8Fs
Horbc7CrhrLcQ6RvCMHXwwfPDVvZnlfy/vXW1Zq2F9kRHoqVtTueYfHszX9C
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
Cy200EILLbTQYnzx/wCeXVb4
    "], {{0, 286}, {280, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVeQdYVL2zd85WWJal996b9A7Se+8dgYVdel06qFSRoiIIKAIqqCCoYKGJ
2BBEFBFUwIJIsdBUUEARkHso+v7ve7/nu88NT3J+O5lMZjKT5AxHwDfC3h8B
AIimght7YrwehUJMdKCHfziFRwcFhJNJZuEx5AAyRc0XgonsXHADuNiJkZGh
CJgrLDyGYm+iz+/q5s6PHQcQ/EcHBAE90S86Us/W1nKT+8/zv5flIbApEDyX
3pT1P/v/v4WBRI72AwCyhbEvKdovDMaNAKA4/SIpMQCg+2G6UHxM5CZehDEz
BVYQAMymkcwB25h7E/tuY7ktHkd7AxgbAkCFJxIpAQAQNuXzx/kFwHIIkXAf
YzgpKBxmzYSxtl8gkQQAZyfMsyssLGITz8NY3Pc/5AT8N5m+f2USiQF/8bYt
W4XKMCg6MpSY+H9cjv+9hIXG/plDEK74QIqp/abN8LpdCImw2MR4GLeH+1rb
wJgRxg+DSFv8m/h1YKyp0w7/nF+0AbxmgBUABCARDS1gDK8lgjU2xElvBysQ
KVtjYX6EdVCMmeMO9qVE2O/IR8SFh1pb7sjJDiSb/cGnyNFGDn94/IOMzWAM
RxqiMSnQ0WVbT0RnXJCzNYwJMO6PDnGw2Bk7mhRoYP2HhxJrv6mzMIwX/SnG
9ts8SPaw6D92IWX8iFtzscNYNybQ0XR7LNKVHO1q+UcHEtnQaFsHJIkc7rSj
GxKOLn37nbFZkaG2O/zIU+RQE/vtdUZeiY5z+DP2WQwcYNvrgJwIJprbbuuP
XI6MsXXc1g2FApbAABgCfhALV18QAYJBUN9cyxz8a7vHGBABBQQAMpDeofwZ
4bLVEw63DiAJfIYRGUT/Hae/1UsGcTB9/S91u5UG/lu9cVsjQsBHGIehOFHa
KE2UJdzqwlUBpYZS/zOOn+7PrBgjjCHGFGOMkfirhx+sdShcKSDo/0GzgJ9k
2LpNXcL/2PCPPPRH9AB6Aj2IHkO/As7g/ZaUHS7voHTKvzTnB1ZgDJZmvGOd
Lyxz+g8PShTWWhmlj9KC9Yd1R7GiOIE0Sgm2RA+lA9umDFP/U8PYv7r9s5b/
nm9T6/+0Z4dOkCQo72jh+9czBn+5/i3F4D/WiAQ/Lf7NicxGXkd2I+8he5Dt
yBbAj7yDbEX2Im9t4r+R8H4rEv7MZr+lWwgsJ+gPj9xFuWm5tf8xO3FHA8qW
v0EMOSFmc0MYREQmUoICAmP49eATmcxvFu4ns4tfQU5eFYDN8337+Phuv3Vu
Q6xP/6GRpwDYDcc4df8/tOBjANR1AcCW+w9N1AMAjl0AXH3mF0uJ26ahNhs0
wMH3BjPgALxACIjDNikAFaAJdIERMAc2wBG4AS941QNBGKx1PNgL0kAWyANH
QTE4CU6Ds+ACuAyugRbQDu6BB+Ax6AeD4A0cGx/ALJgHy2AVgiAsRAsxQRwQ
HyQCSUEKkBqkDRlBlpA95Ab5QAFQOBQL7YUyoDyoEDoJVUK10FXoBnQP6oEG
oFfQODQNfYN+IZAIPIIZwYMQRcgi1BB6CAuEI2IPIgARhUhCZCKOIE4gqhCX
EM2Ie4jHiEHEGGIWsYQESBokK1IAKY1UQxogbZDuSH8kBbkfmYssQVYh65Ft
sK+fI8eQc8gVFAbFhOJHScPxaYpyQvmholD7UYdQJ1EXUM2oTtRz1DhqHvUb
TYvmRkuhNdBmaFd0ADoenYUuQVejm9Bd8N75gF7GYDCsGDGMKrw33TDBmGTM
IUwFpgFzFzOAmcQsYbFYDqwUVgtrgyViY7BZ2FLsJewd7DPsB+xPKhoqPioF
KmMqd6pwqnSqEqo6qttUz6g+Ua1S01OLUGtQ21CTqBOp86nPUbdRP6X+QL2K
Y8CJ4bRwjrhgXBruBK4e14UbwX2noaERpFGnsaMJokmlOUFzheYhzTjNCp4R
L4k3wHviY/FH8DX4u/hX+O+0tLSitLq07rQxtEdoa2nv047S/iQwEWQIZgQS
IYVQRmgmPCN8oaOmE6HTo/OiS6IrobtO95Rujp6aXpTegJ5Iv5++jP4G/TD9
EgMTgzyDDUMYwyGGOoYehilGLKMooxEjiTGT8SzjfcZJJiSTEJMBkx9TBtM5
pi6mD8wYZjFmM+Zg5jzmy8x9zPMsjCxKLM4sCSxlLLdYxliRrKKsZqyhrPms
11iHWH+x8bDpsZHZctjq2Z6x/WDnYtdlJ7PnsjewD7L/4uDnMOII4SjgaOF4
y4nilOS044znPMXZxTnHxcylyeXHlct1jes1N4JbktueO5n7LHcv9xIPL48J
TyRPKc99njleVl5d3mDeIt7bvNN8THzafEF8RXx3+Gb4Wfj1+EP5T/B38s8L
cAuYCsQKVAr0CawKigk6CaYLNgi+FcIJqQn5CxUJdQjNC/MJWwnvFb4o/FqE
WkRNJFDkuEi3yA9RMVEX0YOiLaJTYuxiZmJJYhfFRsRpxXXEo8SrxF9IYCTU
JEIkKiT6JRGSypKBkmWST6UQUipSQVIVUgO70LvUd4Xvqto1LI2X1pOOk74o
PS7DKmMpky7TIvNFVljWXbZAtlv2t5yyXKjcObk38ozy5vLp8m3y3xQkFfwU
yhReKNIqGiumKLYqLihJKZGVTim9VGZStlI+qNyhvK6iqkJRqVeZVhVW9VEt
Vx1WY1azVTuk9lAdra6vnqLerr6ioaIRo3FN46umtGaIZp3m1G6x3eTd53ZP
aglqEbUqtca0+bV9tM9oj+kI6BB1qnQmdIV0SbrVup/0JPSC9S7pfdGX06fo
N+n/MNAw2Gdw1xBpaGKYa9hnxGjkZHTSaNRY0DjA+KLxvImySbLJXVO0qYVp
gemwGY+Zn1mt2by5qvk+804LvIWDxUmLCUtJS4plmxXCytzqmNWItYh1uHWL
DbAxszlm89ZWzDbK9qYdxs7Wrszuo728/V77bgcmB2+HOodlR33HfMc3TuJO
sU4dznTOns61zj9cDF0KXcZcZV33uT5243QLcmt1x7o7u1e7L3kYeRR7fPBU
9szyHNojtidhT48Xp1eo1y1vOm+i93UftI+LT53PGtGGWEVc8jXzLfed9zPw
O+43S9IlFZGmyVrkQvInfy3/Qv+pAK2AYwHTgTqBJYFzQQZBJ4MWgk2DTwf/
CLEJqQnZCHUJbQijCvMJuxHOGB4S3hnBG5EQMRApFZkVORalEVUcNU+xoFRH
Q9F7oltjmOFXnd5Y8dgDseNx2nFlcT/jneOvJzAkhCf0Jkom5iR+SjJOOp+M
SvZL7tgrsDdt7/g+vX2V+6H9vvs7UoRSMlM+pJqkXkjDpYWkPUmXSy9MX8xw
yWjL5MlMzZw8YHLgYhYhi5I1fFDz4OlsVHZQdl+OYk5pzu9cUu6jPLm8kry1
Q36HHh2WP3zi8MYR/yN9+Sr5p45ijoYfHSrQKbhQyFCYVDh5zOpYcxF/UW7R
YrF3cU+JUsnp47jjscfHTlieaC0VLj1aunYy8ORgmX5ZQzl3eU75jwpSxbNT
uqfqT/Oczjv960zQmZeVJpXNVaJVJWcxZ+POfjznfK77vNr52mrO6rzq9Zrw
mrEL9hc6a1Vra+u46/IvIi7GXpy+5Hmp/7Lh5dZ66frKBtaGvCvgSuyVmas+
V4euWVzruK52vb5RpLG8iakptxlqTmyebwlsGWt1ax24YX6jo02zremmzM2a
doH2slsst/Jv425n3t64k3Rn6W7k3bl7AfcmO7w73tx3vf+i066zr8ui6+ED
4wf3u/W67zzUetjeo9Fz45Hao5bHKo+be5V7m54oP2nqU+lrfqr6tLVfvb9t
YPfA7Wc6z+49N3z+4IXZi8eD1oMDQ05DL4c9h8dekl5OvQp9tfA67vXqm9QR
9EjuW/q3JaPco1XvJN41jKmM3Ro3HO+dcJh4M+k3Ofs++v3ah8yPtB9LPvF9
qp1SmGqfNp7un/GY+TAbObs6l/WZ4XP5F/EvjV91v/bOu85/WKAsbHw79J3j
e82i0mLHku3S6HLY8uqP3J8cPy+sqK10/3L59Wk1fg27dmJdYr3tt8XvkY2w
jY1IIoW49SqAhCvC3x+AbzUA0LoBwATncTjCdv61U5DQZtoBgDNkhNBDqqHY
0TgMFVaOyo06A3cHj6ElElrocQyhjI+YlVnK2QB7CEcflwr3UZ5ZPl3+fIEB
IZywuoibaIhYmLinhL4kj+SC1INdpdIhMlqytLLv5BrkUxXsFAUUPyvdUD6g
YqfKrfpBrV49QUNPE6f5fHe5Fkl7l/Y3nRbdvXr6+nj9dwa3DeuMKowLTPab
Es10zNnNFyx6LeutKqwrbdptJ+3RDhyOnE70zkjnNZdVN+BO7UHwpN2D2rPk
NeHd73OXeN232q+UlEtO9A8IcAzUD1IKlgwRCOUIowtHhi9GTET2R92knIs+
EpMSmxXXlIBKJCfd3Qv2ie7XSDFL9UiLTT+SUZyZfEDpwGRW/kHbbJEcmlyQ
hzjEcFj8iHa+9VGXAvdC92OuRc7FjiV2x61PWJSanNQv0y5Xr1A8JX1a8oxc
pUVVxtmx82bVl2pmaxnqRC7KX9K8bFhv1eByxftq4LXI6/GN+5vSmw+0ZLfm
3chvK75Z3l59q/F2153hu2P3hjoa7vt3snc+7Cp5EN/t/3BPj8sju8cWvSZP
TPscn0b1nxl49ZzmheygwZDZsNFLtVcirwmvV95Mjbx8e2/07LuMsYBxpwnr
Sav3Nh9sPpp/Up9imxqbzp1RmhmbvTCX9Nn0C9WX2q8mXyfnzy4kfPP6brNo
tRS83PHz4K+WdcONjR3/yyNRyGnUGHoSM0+FpFbBBdKU48cIknTx9A8YOZgS
mV+wKrCls7/lVObK4u7n5eRz5S8QaBccEVoSXhaZEX0idlacIqEtSSX5Qur0
rmBpZenfMg9kj8i5yPPJf1KoV4xT0lKGlLtUclVt1JjUhtRLNTw0eTRH4Cjw
1ObQHtY5ruuhJ6q3qj9ocNXwkBHZeLcJg8lH03azYvM4C7Klr1WgdYRNmK2v
nY29poOkI5cTwRnhvOzyyXXI7b57vUeZZ+6eJK8gb1cfQ6KsL7sf5DdDGiR3
+jcFVAeWBGUGR4S4heqGiYXTwpEwHjkatRgtEOMdWxp3L/5lwmTiXNLKXpp9
vPvFU/hTManv0prS8zMomV4HnLJcDwZlZ+RU5F7OazrUfLjxyNX8y0drC84X
njlWVlRcnF+Sczz9RGJpxMmAsqDy1Io7pyXOXKgSO1t47vn5lRrCBc5aoTpJ
OA5UL2vXGzZYXXG7Gnot6/rZxttNA82jLVOt39uQN9napW5p3ta9o3pX4B7i
3kRH9/2mzpqusgdHuw88TOqhPIp5nNPb3sf6dF//22ecz3VeOA76D6UOn3/5
9NXiG8YR6beWo5Hvjo/dHH82MTo58X72Ixr2ftr0wCzDnNxn5S+iX+m+/pz/
uDD87dH3G4uVSynLzj/Efiz/bF9J+qW5il8zXJ/e8b8MNIuoQHqhJNBY9AJm
GjtDNUG9QIPDi9DqEdzp0ugvMQwwbjCLsBixBrMdYD/N0cjZxfWQ+wHPTd5K
vgR+ff5fAucELQRnhbKFxYQ7RLxEVkSLxOTEHokHSGAlaiRNJT9JZe0S39Ul
7ScDZCpkd8u+lIuF324aFCwVphQzlHiVWpXtledUDqjyqbbAby1T6ikarBoX
NfU0n+322/1FK1kbq12mo6QzpJukx6vXqm+j/8og0GDDsMrI1pja+L7JXlMl
0xmzKnNPC3aLIctiKwdrOusemwxbTdtFuwb7EAcxh/eOlU57nDmcX7jku5q6
brg1uYd6CHu89SzZY71n2avIW8S70UfP5zUxwVfQ9yV8jgSSTfxVA9QDzYKI
wWEhxFCdMPqwkfDzEWGRypFrUfcpudG2MSwxb2JPx5HiReM/JpxKNEocSQpN
Zk5+vvfmvtv7O1Pup95Iq00vycjIjDjgkWV0UDIbnf0ipzTXPU84b/XQ2OEn
R27knzm6v8CjUOMY57GVoqHiayXHjx8+UVhaefJ62YPylxUzp1bP0FbyVyme
NT3neT6ien9NzoVDtal1xIuqlwiXvl3+XL9yBX+V95rCddvG5KbG5p+t6jci
20pvXmlvvXXzds+dpXsmHTc6HbqWukt6FB+96D3c59Nv9kzvhf5Q6CvCyOxE
38zS4sqm/7f/D7dZMCoAHEuDM9QsAJx0ACjohPPMQTjvxAFgSwuAozpAiPoD
BL4XQBrjf+8PCL5tMIAGMAB2wAfEgBzQgHNjG+AO/OGcOA3kg1OgHtwGT8E4
WIQzR25IHjKBvKF4qAC6BD2EPiIwCHGEJSIaUQHneRtwXheHvIH8jTJBHUNN
oBXR2eh3GA1MKWYVzrAeUalS1VBzURfgaHA5NDiao3hOfA2tEm07QYvQRqdG
d5PelP4NQwwjPeNlJkOmAWZH5gEWG5ZnrN6sP9lK2bXYRzn2cXJxtnF5cVNz
t/PE8Srxfue7xk8RUBZYE+wWKhEOFNktShAdE7suni3hK6knJbqLsGtV+ovM
e9lBuSb5ZAV5hVHFbCVlpa/KrSqFqolqJHVLDTlNtt0ELRntMl0pvcP6PQZf
jaiMWUw4TLnNhM2VLKwto6xOWHfafLMTsndxOOLY7YxyMXTNcuv1YPX03VPn
9d4HQ2Twxfgu+X0gjZBnAugCLYKKgz+F7g4rCv8SaR5VF42PiYp9HW+c0Jok
nVy9j39/WSprWkEGLjPtwNLB4OzZ3LxDYUeaChiOcRZ9Lqk94X2Stay/4vBp
kzNLVfnnmM9nVy9fCKn9dvHoZaMGhisL1z42TjXPtn5qm2xfuMN2z+C+V5dP
t0OPzmPZJxJPVQbCn/8cRr2mHjn9jmn89gfC1N5Zvc8NX1e/qSwaL+N+HP75
aGXq14fVV2uN60d/+27IbZ0fm/7HAjxgBBxAAEgCRaAFTIEj8AFhIBnkgFJQ
C26Ax+AtmIfQECckt+X9RKgIugL1QZ8RdAhFhDsiA3EN8QHJh/RGnkPOoVRQ
mahBtAQ6DT0C+74MC7CB2EEqI6pWalnqOpwE7hKNEs0dvC1+kjaBQE0ophOg
uwLnr28Y4hlZGVuYnJk+M+9jwbGcYJVmfcQWwc7GfpcjiJOZ8y5XBLcw9whP
Ka8rHzvfK/4KAZKgnBAQeiF8USRT1FNMCc7lZiR6Ja/Dt1i+dIbMXtkYOT95
XQW8Qp9irpKFMpvygsor1W61ZvUqjUOaSbvjtHK0W3V+6CnqkwzyDKuNmo1v
mtw0vWXWYz5uibCStHa2OWDbYjfnIOzo7VThPOoq6Bbs3uyJ3ePiddK7y2eA
2OFb65dNCiLb+5sGuAWmB90NoQ31DWuP4IxMinobrR9TG0cXH5nwOEkgOW5v
/37llHNpXOlFmbgDyVlz2cScibykw3L5iKNvC68WxZUoHf9WerUstkLj1K8z
1VUKZyvOfaoWqwm8cKWO7WL5Za36z1dKr6lf72siNq+2VrXZtYNbtXcs7y50
nO70faDxUOAR6vGTJ3FPMf25z/DPqwa9h61ehb6peftpjG/C9n3ax9vTbLNH
v4jOP/letHxoxWxVYe3U+vvfCzv+RwFqQA/vfgEgBVSAAbAFXrDv98E7vxI0
godgFN73eEgU0oX2QMlQGXQLGkdQw14nIooR/UgWJBl5C8WNSkXNoN3QTzAG
mFtYLew9Kkuqt9TRODrcFRpnPBLfQhtFkCf8pOuiL2WIZXRjMmM2Z7FjNWdT
ZZfgUOb05krkjuHx5XXks+a3ErAStBSyErYX8RaNFjssXifxUHJ6F620qoy/
7Em5IQVORZJSg/Kqqq3aE42c3W7aaJ2jumv6FgYZsAdbjNtNbpv2ma1aWFg2
W8vYXLKTsW92NHAacglzw7lf8nT2YvCh8fUmeZDfB2gG5gV9DLEP7Q23ingW
5UGZikmO440fTXyQfHdfRYpT6q/0ykznLL6D8zm38g4d9s83KeAofFzkX7x8
PKOU4WRVuUrFk9P+lVBV+Tm184M1sbVcdQ8vpdSbXJG9ZtyY0lzVmt/m1s52
a/hO2T23+9jO8w+Uum/2GD0a7k3ok+1HDsw/nxocGC54Jfa64s3vt0ajue8e
j9NNOE2eeT/9Uf5TyNSZ6YczM3Poz9xf5L4azrssEL+RvtsuCi4uLR1e5l6u
+6H+4+SPlZ8uP5tXWFcoK80rq790f2X+6lklrDqsHl/tX6Na011LWLu6Nr0u
sO62Xrj+aH39t/xv0u/jvx///r0hv0HeOLHRu+n/aH9Fha3rA8LrA4Ae3dj4
LgoAthCA9YKNjdWqjY31s3CyMQLA3dDtbztbdw09AOWb33jA49Zfqf/+xvJf
qvHUag==
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "XML:com.adobe.xmp" -> 
        "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core 5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:exif=http://ns.adobe.com/exif/1.0/> \
<exif:PixelXDimension>280</exif:PixelXDimension> \
<exif:PixelYDimension>286</exif:PixelYDimension></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{280, 286},
  PlotRange->{{0, 280}, {0, 286}}]], "Input"]], "Text",
 CellChangeTimes->{{3.701225760661696*^9, 3.7012257642924767`*^9}, {
  3.701225876374523*^9, 3.701225905815237*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Elements", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "symbol", ",", " ", "Z", ",", " ", "A", ",", " ", "Core", ",", " ", 
      "Mantle"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<O\>\"", ",", " ", "8", ",", " ", "16", ",", " ", "0", ",", " ", 
       ".44"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Si\>\"", ",", " ", "14", ",", " ", "28", ",", " ", ".06", ",", 
       ".21"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<Mg\>\"", ",", "12", ",", "24", ",", "0", ",", ".228"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Fe\>\"", ",", "26", ",", "56", ",", "0.855", ",", ".0626"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<Ca\>\"", ",", "20", ",", "40", ",", "0", ",", ".0253"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<P\>\"", ",", "15", ",", "30", ",", "0.002", ",", ".00009"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<Na\>\"", ",", "11", ",", "23", ",", "0", ",", ".0027"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<S\>\"", ",", "16", ",", "32", ",", "0.019", ",", ".00025"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Ni\>\"", ",", "28", ",", "59", ",", "0.052", ",", ".00196"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<Al\>\"", ",", "13", ",", "27", ",", "0", ",", ".0235"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cr\>\"", ",", "24", ",", "52", ",", "0.009", ",", ".0026"}], 
      "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7012258041467876`*^9, 3.7012260782791357`*^9}, {
  3.701264359319318*^9, 3.701264359759102*^9}}],

Cell[CellGroupData[{

Cell["Sanity Check", "Subsubsection",
 CellChangeTimes->{{3.701264365063479*^9, 3.701264374648443*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"O\"\>", "8", "16", "0", "0.44`"},
     {"\<\"Si\"\>", "14", "28", "0.06`", "0.21`"},
     {"\<\"Mg\"\>", "12", "24", "0", "0.228`"},
     {"\<\"Fe\"\>", "26", "56", "0.855`", "0.0626`"},
     {"\<\"Ca\"\>", "20", "40", "0", "0.0253`"},
     {"\<\"P\"\>", "15", "30", "0.002`", "0.00009`"},
     {"\<\"Na\"\>", "11", "23", "0", "0.0027`"},
     {"\<\"S\"\>", "16", "32", "0.019`", "0.00025`"},
     {"\<\"Ni\"\>", "28", "59", "0.052`", "0.00196`"},
     {"\<\"Al\"\>", "13", "27", "0", "0.0235`"},
     {"\<\"Cr\"\>", "24", "52", "0.009`", "0.0026`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.701264367470789*^9, 3.701269575804916*^9, 
  3.701269659288566*^9, 3.701269767467875*^9, 3.701269817056364*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elemental Distribution", "Section",
 CellChangeTimes->{{3.701269311962658*^9, 3.701269314268013*^9}}],

Cell["\<\
 The core--mantle separator is r=3480 km. This corresponds to element 271 of \
491.\
\>", "Text",
 CellChangeTimes->{3.701269342518104*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rcore", "=", 
   RowBox[{"Radius", "[", 
    RowBox[{"[", "271", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rearth", "=", 
   RowBox[{"Radius", "[", 
    RowBox[{"[", "491", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.701269364194612*^9, 3.701269401353094*^9}}],

Cell[CellGroupData[{

Cell["Reprocess elemental data", "Subsection",
 CellChangeTimes->{{3.701269533683073*^9, 3.701269542656315*^9}}],

Cell["\<\
Column 5 is a little tricky, but it gives the number density of the element \
for each radial slice. The expression is:\
\>", "Text",
 CellChangeTimes->{{3.70127082368683*^9, 3.701270849312142*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["n", "i"], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Mass", " ", "Density", " ", "in", " ", "Shell"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"mass", " ", "fraction", " ", "of", " ", "element"}], ")"}], 
   RowBox[{
    FractionBox["1", 
     RowBox[{"mass", " ", "of", " ", "element"}]], "[", 
    RowBox[{"convert", " ", "to", " ", 
     FractionBox["1", 
      SuperscriptBox["cm", "3"]]}], "]"}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.701270861739841*^9, 3.701270999115961*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MyElements", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", "1", "*)"}], 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", 
        RowBox[{"(*", "name", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "2", "*)"}], 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", 
        RowBox[{"(*", "Z", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "3", "*)"}], 
        RowBox[{"#", "[", 
         RowBox[{"[", "3", "]"}], "]"}], " ", 
        RowBox[{"(*", "A", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", "4", "*)"}], 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", ".938272", " ", "GeV"}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{"mass", " ", "in", " ", "GeV"}], " ", "*)"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "5", "*)"}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Density", "  ", 
              RowBox[{"(*", " ", 
               RowBox[{"density", " ", "of", " ", "shell"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"{", "271", "}"}]}], "]"}], ",", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{"const", " ", 
                  FractionBox[
                   SubscriptBox["mass", "i"], 
                   RowBox[{"total", " ", "mass"}]], " ", "for", " ", 
                  SubscriptBox["r", "i"], " ", "in", " ", "core"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "5", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Length", "[", "Radius", "]"}], "-", "271"}], 
                   "}"}]}], "]"}]}], " ", 
               RowBox[{"(*", " ", 
                RowBox[{"const", " ", 
                 FractionBox[
                  SubscriptBox["mass", "i"], 
                  RowBox[{"total", " ", "mass"}]], " ", "for", " ", 
                 SubscriptBox["r", "i"], " ", "in", " ", "mantle"}], " ", 
                "*)"}], "\[IndentingNewLine]", "]"}]}], " ", ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], " ", ".938272", " ", "GeV"}], 
             " ", 
             RowBox[{"(*", 
              SubscriptBox["m", "proton"], "*)"}], " ", ")"}]}], " ", "/.", 
           RowBox[{"{", 
            RowBox[{"kg", "\[Rule]", 
             RowBox[{"1000", " ", "g"}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"g", "\[Rule]", 
            RowBox[{"5.62", " ", 
             SuperscriptBox["10", "23"], " ", "GeV"}]}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{"m", "\[Rule]", 
           RowBox[{"100", " ", "cm"}]}], "}"}]}]}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"list", " ", "of", " ", 
          SubscriptBox["n", "i"], " ", "for", " ", "each", " ", 
          RowBox[{"radius", ":", " ", 
           RowBox[{"\[Rho]", 
            FractionBox[
             RowBox[{"mass", " ", "frac"}], "mass"]}]}]}], " ", "=", 
         RowBox[{"\[Rho]", 
          FractionBox[
           SubscriptBox["n", "i"], 
           RowBox[{"total", " ", "mass", " ", "density"}]]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "}"}], "&"}], "/@", "Elements"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mn", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "&"}], "/@", "MyElements"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mnInGeV", "=", 
    RowBox[{"mn", "/.", 
     RowBox[{"GeV", "\[Rule]", "1"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberdensity", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "&"}], "/@", "MyElements"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nmeters", "=", 
    RowBox[{"numberdensity", "/.", 
     RowBox[{"cm", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "2"}]]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "MyElements"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{
  3.701269607016725*^9, 3.701270804793181*^9, {3.701276291601822*^9, 
   3.701276312333268*^9}, {3.70127635018078*^9, 3.701276390994917*^9}, {
   3.701277417656605*^9, 3.701277437357506*^9}, {3.701277494128141*^9, 
   3.701277533982336*^9}, {3.701278498094466*^9, 3.701278507710092*^9}}],

Cell[CellGroupData[{

Cell["Additional Discussion (what\[CloseCurlyQuote]s going on in column 5?)", \
"Subsubsection",
 CellChangeTimes->{{3.701271017293874*^9, 3.701271024466351*^9}}],

Cell["Here\[CloseCurlyQuote]s how the Table commands work:", "Text",
 CellChangeTimes->{{3.701271042932363*^9, 3.701271047396641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", "3", "}"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"aa", ",", "bb", ",", "cc", ",", "dd"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"aa", ",", "aa", ",", "aa"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"bb", ",", "bb", ",", "bb"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cc", ",", "cc", ",", "cc"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"dd", ",", "dd", ",", "dd"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.701271048342119*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["Join[",
  FontWeight->"Bold"],
 "...",
 StyleBox["] ",
  FontWeight->"Bold"],
 "command is creating an array whose first 271 elements are the core mass \
fraction, and the remaining elements are the mantle mass fraction."
}], "Text",
 CellChangeTimes->{{3.701271055723569*^9, 3.7012711179303637`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Sanity Check", "Subsubsection",
 CellChangeTimes->{{3.701271162473827*^9, 3.701271164005011*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"MyElements", "[", 
        RowBox[{"[", "11", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"MyElements", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "/.", 
    RowBox[{"cm", "\[Rule]", "1"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<radius index\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(n\), \(i\)]\) [\!\(\*SuperscriptBox[\(cm\), \
\(-3\)]\)]\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
siZ1tj8B0oKO9I6EXpv/ApJKusU=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdz3l8TXcax/FDpOhYQpHYEzON0NBLJY1SHrtEQmQRBDki9lRy9/06dpWK
MKXpS8vV2FISKSEJHTmtpUWRhNqXS62VculYQtSYmef3h+/557zer+c853l9
glIz4qbWlSTpXh1J+u/7/4+3v/TmQ2+yAdgP3AIcAG4HDgR3Av8DHAwOAXcF
h4K7gzXgHuCe4A/AvcBh4HDwh+AIcG/wR+A+4L7gj8H9wP3B9KYVsDQA5mBp
IMzB0iCYg6XBMAdLQ2AOlobCHCwNgzlYGg5zsBQJc7AUBXOwNALmYCka5mAp
BuZgaSTMwdIomIOl2DdNYAWsgqXRsA9WwCpYioN9sAJWwVI87IMVsAqWEmAf
rIBVsJQI+2AFrIKlMbAPVsAqWEqCfbACVsHSWNgHK2AVLI2DfbACVsHSeNgH
K2AVLCXDPlgBq2BpAuyDFbAKlibCPlgBq2BpEuyDFbAKllJgH6yAVbAkv+lA
MIFlsAJ2g1WwByxNhvtgAstgBewGq2APWEqF+2ACy2AF7AarYA9YmgL3wQSW
wQrYDVbBHrCUBvfBBJbBCtgNVsEesDQV7oMJLIMVsBusgj1gaRrcBxNYBitg
N1gFe8DSdLgPJrAMVsBusAr2gKUZcB9MYBmsgN1gFewBSzPhPpjAMlgBu8Eq
2AOWZsF9MIFlsAJ2g1WwByzNhvtgAstgBewGq2APWEqH+2ACy2AF7AarYA9Y
+gTugwksgxWwG6yCPWBpDtwHE1gGK2A3WAV7wFIG3AcTWAYrYDdYBXvAUuab
9gMHgjVgAseCZXAmWAHngN3gIrAKrgB7wF6wpKV7DWOq/5k1YfD/6KelNNlZ
8uV8dqCWruwpmL/eytZo6YPuQ7dtzWSTlpZsunLqu+nsWC2Vfnx13P5JbFlL
t3+9evVoIjtTSwFzPFPPRrMVLUW+de3eb4PYOVpKKI88+edHbLeWUiw7d/r0
ZBdpac5qzV13F7aqJdvOwo79gtgVWprq/XzXlQC2R0sjutuHzfVje7UUlj75
YscGbElHHb4dlqG+SuZ+HdW/081n8lN2oI4evNviizoP2BodFS9MXbrpFpt0
tO7H4e2GXmHH6ig16IvGv//KlnUUmeLcsOw4O1NHTfcfW9X9EFvR0el2bRZW
fc/O0dG+8VKAvpjt1tG8spEN/bezi3Q0KODr53vz2KqOQscsyE5ey67Qkbe4
cu6rVWyPji48KnnHvYzt1dEBzbotNJ8t6WnxiurcG1bRr6eM41Whi7SiX09J
fytT350p+vVEkesTDsuiX08jp7XPmjJW9Ovpw40+HevFin49DflhXuKGYaJf
T6OvvMrq11/06ynlhfPHi+GiX0/pAbXPLN1Fv57WtWhe1TxY9OvppF/Itu3t
Rb+efBr3Wzi0pejXU6+GCRM9jUS/nrJu1Dlvqif69XStfEdC49rx3G+gCbbH
OvefbD8D7UrMux9+jx1ooPgHyo7D19kaA53IP3x83AU2GeiTQRuz71ayYw3U
6PK8UdYjbNlAJxOf7vT9gZ1poM9PpLdaVcpWDOQItrVrW8TOMVCaa0mnjVvY
bgNpd4ce67KeXWQgpbpSv2MNWzXQd3WblvfIZlcY6HpA9NvFi9geA0U0CXrW
08n2GmiFz5Ob3xlEv5HePpdq6pYu+o2UnzU9f9MU0W+k4f3TL7VPFv1GalTV
YOeqONFvpIq0TUvqR4l+I5WeOf/KMkD0G+lg581tbkeIfiNVWXRhiRrRb6S6
+WcelXcW/UYaV1oV17mj6DfS6c3TErNaiX4jxax+nvSgseg3UnVq8MtRvqLf
SEVNfx9cUDuO+42Uu3bI+/X/zfYaSem8ofXke2zJREXa0Mji62w/E/22r8RS
/wI70EQf3rwQlVTJ1phoeZO/2m35mU0mCn0S28tbzo41kff7PvfDStiyiXYt
CN5qL2RnmkhtMGDL3k1sxUS/LE/eXPMVO8dEtQ8bDw/7nO02kamFt/usLHbR
6/+HV7VcP5+tmig7Inp9hZVd8fr7Z48/eZEp+k00qXR93+AZot9Es5KuFcSk
iH4zlRfHpc0ZI/rN1KL5wTYrYkS/mXZ1m9oqf7DoN5MpZF1xeR/Rb6aJdTMe
V/UU/Waase/suetdRL+ZcuPPTXoQKPrN9MfRzCXP/EX/6++DNsT91UT0mykk
vM6Ul76i30zNuta0rKkdy/1mavty6eyHf7JVM0XvKJpy63d2hZkOdWyw4fQ1
tsdMUzKeKuXn2F4zBa9z+Ww5yZYs1Gj71yFZh9l+FuprqV4141/sQAvl/P3U
+oHFbI2Fui2/+7DlNjZZ6OiTV4PubmDHWujMy8vOnbls2ULX6n1fYl/BzrRQ
+NEj4f0WsxULVcXUf1HjYOdYaE7l4PLderbbQrZHkbOnzxL9Flr0zij/1pNF
v4X+qmy7TU0S/RYy5dzpN2Ok6LdQROOb/g2HiH4LDRzeLDyvj+i3kjb11ye9
e4p+K9356EjtkRDRb6X8yuph8R1Fv5VWDNsadr6l6LfSV1+9OJTcSPRb6f4O
19qzdUW/lbLm9dgTXZPE/VbKaNai1b4HbMVKViU7IPgWO8dKJwoi5GWX2G4r
Dd5ri7pXxS6yUr1F1dYhR9iqlZo0yb6fW86usFJqYsrWm7vZHitdtP9c7/3t
bK+VcuXJm7XfsCUbbfTpurwgl+1no6dpncquZ7MDbbRyYVTXZovYGhuNXvB2
v752NtloPD1fI2vZsTYq2Nc6zDWdLdso8vGMgNUTRb+NQv+4TZviRb+NkvPW
FBZGin4bFUZc3l/cX/TbKH32vT1FYaLfRrHOlaPz3xP9NsoLfXXqiyDRb6PW
++rVzPcX/TZ6eavSN62x6LfRW4/Cdw/wEf12Stp3LD+gZgz328m/U8jim/fZ
gXZ6Pr2d744bbI2dokecmz3nApvsdKv6gH/nCnasnZqae3629CBbttOmdTPu
XC1lZ9pp0cITn2oK2IqdTtevbW7ewM6x0/KQhwt2rWa77bT7VsGlm5+yi+w0
YmDP9k1cbNVOK4Ns9W9bE7jfTscOLOqyzMD22MmzuGarJoPttVPbLr7HTs1k
Sw7yLC04uT+e7eegn376w7T5Y3aggz7tvMa+sjNb46DMaWc6WZuxyUEfHHZ1
TnsRz/0OauNbfmLETbbsoMtp00+Fn2RnOuhQ3hZbhzK24qClPrFzG+axcxyU
MTAn+OFnbLeDenwT8d4lE7vIQQHXLFUHZLb6+v8UdLYwil3hoANzJ7vW9GJ7
HLT4asMF8zqwvQ4aErV2zczgOO530oh3e59d1pbt56Q46az/dj92oJPGXjSM
Pe7L1jgpZU/zL+8/H839Tpq6suh8Uy871klDl+8x97rJlp00ckZCaeIFdqaT
EgY9emY6yVacNL5DTu/cg+wcJ8k13WxlZWy3k6afPrb3QiG7yEmRFZVjX+Wx
VSdNCl4WXjqAXeGk7Vsnbi8ZxPY4qbZrj04lQ9heJwWfSH9cNowtuUgfS7PL
Itl+Lvqx6p1rpSPYgS5qnnh7TGkMW+OilLN7fykZJfpdVDgue2DJaNHvovO1
R1rujRf9Lgo5kpU+aYzod5F1dcyBuuNEv4s2zzebv00W/S4aE3l029KfYrjf
RX0m7Dbd2BnF/S4aFZ1d98CjXoP/A+l8KM0=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(i\\)]\\) \
[\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-3\\)]\\)]\"", TraditionalForm], None}, {
     FormBox["\"radius index\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 491.}, {0, 2.1062659050893557`*^21}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.70127116485562*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dark Matter Velocity Distribution", "Section",
 CellChangeTimes->{{3.701271189080031*^9, 3.701271194346977*^9}}],

Cell["\<\
Start with galactic center rest frame velocity distribution. Eq. 17 of \
1509.07525 (Earth paper). We\[CloseCurlyQuote]ll write all of our velocities \
in natural units. This simplifies units, but also has the benefit of making \
the velocity integral go over a finite range, which may help with the \
numerical integration.\
\>", "Text",
 CellChangeTimes->{3.701271203718245*^9}],

Cell[CellGroupData[{

Cell["Basic Velocity Distribution", "Subsection",
 CellChangeTimes->{{3.701271227643168*^9, 3.701271232427205*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"vgal", "=", 
    RowBox[{
     RowBox[{"550", " ", 
      RowBox[{
       FractionBox["km", "s"], "/", "c"}]}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{"km", "\[Rule]", 
       RowBox[{"100000", " ", "cm"}]}], "}"}]}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"galactic", " ", "escape", " ", "velocity"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"k", "=", "2.5"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"index", " ", "parameter"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"u0", "=", 
    RowBox[{
     RowBox[{"245", " ", 
      RowBox[{
       RowBox[{"km", "/", "s"}], "/", "c"}]}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{"km", "\[Rule]", 
       RowBox[{"100000", " ", "cm"}]}], "}"}]}]}], ";"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Normalization", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N0", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["E", 
          FractionBox[
           RowBox[{
            SuperscriptBox["vgal", "2"], "-", 
            SuperscriptBox["u", "2"]}], 
           RowBox[{"k", " ", 
            SuperscriptBox["u0", "2"]}]]], "-", "1"}], ")"}], "k"], "4", 
      "\[Pi]", " ", 
      SuperscriptBox["u", "2"], 
      RowBox[{"UnitStep", "[", 
       RowBox[{"vgal", "-", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f0", "[", "u_", "]"}], " ", ":=", 
   RowBox[{
    FractionBox["1", "N0"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["E", 
        FractionBox[
         RowBox[{
          SuperscriptBox["vgal", "2"], "-", 
          SuperscriptBox["u", "2"]}], 
         RowBox[{"k", " ", 
          SuperscriptBox["u0", "2"]}]]], "-", "1"}], ")"}], "k"], 
    RowBox[{"UnitStep", "[", 
     RowBox[{"vgal", "-", "u"}], "]"}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"assume", " ", "full", " ", "velocity", " ", "distribution", " ", 
    RowBox[{"f", "[", "u", "]"}], " ", "is", " ", "the", " ", "basic", " ", 
    "one"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "u_", "]"}], ":=", 
   RowBox[{"f0", "[", "u", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.701271237001926*^9, 3.7012712400854797`*^9}, 
   3.701271275429879*^9}],

Cell[CellGroupData[{

Cell["Check", "Subsubsection",
 CellChangeTimes->{{3.70127128993577*^9, 3.701271290405919*^9}}],

Cell[CellGroupData[{

Cell[BoxData["N0"], "Input"],

Cell[BoxData["2.2999530891570084`*^-7"], "Output",
 CellChangeTimes->{3.7012712950353937`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "u", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", ".002"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<velocity, u\>\"", ",", "\"\<f[u]\>\""}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
hl8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQ7RSuX2bNE2fPAAVhdru+7BNA8AsXNZhGCCP4rxgc
k56IIvgp8Yz9BRIIfoRM04sOWQTfblrz7J3qCD5XVxujtA2Cv6iw5+zdFAT/
isOM1ORtCL52ySUjj/R4OF9gwZxwHbYEhPrm4rtz2BH8meleybycCL6S/o+8
d9wIvsm+4LYNggh+5B2urSayCP4iiUohWxMEP+2P/4y1pgi+9gM1OTlzBH/L
8iua/y0R/GNmBo4H7RH8VyHP8129Efx1Fvu+bvVB8Itlplar+SH4fx47tbMH
Ivh8xfPmnQxD8C+FlapYRSD40618Vq2KRPAVmH5t7Y5B8J8+vWD9JxbBX3Vy
+cGceAQ/b22d+90EBN94YuhZ3yQEHwCv23Df
       "]]}, {}}, {{}, {}, {}}}, {}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"f[u]\"", TraditionalForm], None}, {
     FormBox["\"velocity, u\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.002}, {0., 4.6959291981764716`*^8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7012713008116007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["u", "2"], 
    RowBox[{"f", "[", "u", "]"}]}], " ", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", ".002"}], "}"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<velocity, u\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(u\), \(2\)]\)f[u]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.70127130530037*^9, 3.701271345043709*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
aYoJbxnufyzDrbM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQ7RSuX2bNE2fPAAVhdru+7BNA8AsXNZhGCCP4rxgc
k56IIvgp8Yz9BRIIfoRM04sOWQTfblrz7J3qCD5XVxujtA2Cv6iw5+zdFAT/
isOM1ORtCL52ySUjj/R4OF9gwZxwHbYEhPrm4rtz2BH8meleybycCL6S/o+8
d9wIvsm+4LYNggh+5B2urSayCP4iiUohWxMEP+2P/4y1pgi+9gM1OTlzBH/L
8iua/y0R/GNmBo4H7RH8VyHP8129Efx1Fvu+bvVB8Itlplar+SH4fx47tbMH
Ivh8xfPmnQxD8C+FlapYRSD40618Vq2KRPAVmH5t7Y5B8J8+vWD9JxbBX3Vy
+cGceAQ/b22d+90EBN94YuhZ3yQEHwCv23Df
       "]]}, {}}, {{}, {}, {}}}, {}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SuperscriptBox[\\(u\\), \\(2\\)]\\)f[u]\"", TraditionalForm],
      None}, {
     FormBox["\"velocity, u\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.002}, {0., 96.98973304248062}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.70127130666438*^9, 3.70127131509074*^9}, 
   3.7012713455540247`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["In progress: angular averaged velocity distribution ", "Subsection",
 CellChangeTimes->{{3.7012713773531446`*^9, 3.701271393456127*^9}}],

Cell["\<\
See equation16 of 1509.07525 (Earth paper). The observed dark matter velocity \
distribution in the Earth\[CloseCurlyQuote]s rest frame (which is our lab \
frame) is more complicated:\
\>", "Text",
 CellChangeTimes->{{3.6926447562069073`*^9, 3.692644768206493*^9}, {
  3.692644829923338*^9, 3.6926448474850616`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "u", "]"}], "=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{
     RowBox[{"\[DifferentialD]", "cos\[Theta]"}], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "1"}], "1"], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "cos\[Phi]"}], " ", 
       RowBox[{"f0", "[", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["V", "sun"], "+", 
              RowBox[{
               SubscriptBox["V", "earth"], "cos", " ", "\[Phi]"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", "u", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["V", "sun"], "+", 
              RowBox[{
               SubscriptBox["V", "earth"], "cos", " ", "\[Phi]"}]}], ")"}], 
            "cos\[Theta]"}]}], ")"}]}], 
        "]"}]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["V", "sun"], "=", 
  RowBox[{"220", " ", 
   RowBox[{"km", "/", "s"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["V", "earth"], "=", 
  RowBox[{"29.8", " ", 
   RowBox[{"km", "/", "s"}]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.692644853494735*^9, 3.6926449919180107`*^9}}],

Cell["\<\
The reference is: hep-ph/9802253, but a better one is: T.S. Kosmas and J.D. \
Vergados, Phys. Rev. D 55, 1752 (1997).

A more pedagogical discussion may be section 2 of Lewin and Smith, \
\[OpenCurlyDoubleQuote]Review of Mathematics, Numerical Factors, and \
Corrections for Dark Matter Experiments Based on Elastic Nuclear Recoil\
\[CloseCurlyDoubleQuote], Astropart.Phys. 6 (1996) 87-112.\
\>", "Text",
 CellChangeTimes->{{3.69264520284556*^9, 3.692645205062972*^9}, {
  3.692645478907598*^9, 3.69264551255081*^9}, {3.692646755700979*^9, 
  3.692646760950357*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vsun", "=", 
   RowBox[{
    RowBox[{"220", " ", 
     RowBox[{
      FractionBox["km", "s"], "/", "c"}]}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{"km", "\[Rule]", 
      RowBox[{"100000", " ", "cm"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vearth", "=", 
   RowBox[{
    RowBox[{"29.8", " ", 
     RowBox[{
      FractionBox["km", "s"], "/", "c"}]}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{"km", "\[Rule]", 
      RowBox[{"100000", " ", "cm"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"favg", "[", "u_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4."], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f0", "[", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["u", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Vsun", "+", 
            RowBox[{"Vearth", " ", "cos\[Phi]"}]}], ")"}], "2"], "+", 
         RowBox[{"2", "u", 
          RowBox[{"(", 
           RowBox[{"Vsun", "+", 
            RowBox[{"Vearth", " ", "cos\[Phi]"}]}], ")"}], "cos\[Theta]"}]}], 
        ")"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cos\[Theta]", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"cos\[Phi]", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6926449943867607`*^9, 3.692645037083438*^9}, {
  3.692645069353569*^9, 3.6926451432797403`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Capture Rate", "Section",
 CellChangeTimes->{{3.701272231337803*^9, 3.7012722328005*^9}}],

Cell[CellGroupData[{

Cell["Discussion", "Subsection",
 CellChangeTimes->{{3.692655218848618*^9, 3.692655219946258*^9}}],

Cell[TextData[{
 "In order to perform the integral in (15), there are a couple of useful \
things to do:\n\n(1) cancel the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["w", "2"], TraditionalForm]]],
 "dependence in d\[Sigma]/dEr with the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["w", "2"], TraditionalForm]]],
 " in the du integral coming from the distortion of the velocity distribution \
from the Earth\[CloseCurlyQuote]s gravitational potential.\n\n(2) pull out \
common factors of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Epsilon]", "2"], 
    SubscriptBox["\[Alpha]", "X"], 
    SubscriptBox["n", "X"]}], TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "cap"], TraditionalForm]]],
 " since these are overall prefactors.\n\nThe resulting integral is:"
}], "Text",
 CellChangeTimes->{{3.692375231472267*^9, 3.69237525584905*^9}, {
  3.692375411684309*^9, 3.692375498576242*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox[
   RowBox[{"(", 
    SuperscriptBox["C", "N"], ")"}], "cap"], "=", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "2"], 
   SubscriptBox["\[Alpha]", "X"], 
   SubscriptBox["n", "X"], 
   SubscriptBox[
    RowBox[{"(", 
     SuperscriptBox["C", "N"], ")"}], 
    RowBox[{"cap", ",", "red"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox[
   RowBox[{"(", 
    SuperscriptBox["C", "N"], ")"}], 
   RowBox[{"cap", ",", "red"}]], "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "R"], 
   RowBox[{
    RowBox[{"\[DifferentialD]", 
     SuperscriptBox["r4\[Pi]r", "2"]}], " ", 
    SubscriptBox["n", "N"], 
    RowBox[{"(", "r", ")"}], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "c"], 
     RowBox[{
      RowBox[{"\[DifferentialD]", "u"}], " ", "4", "\[Pi]", " ", "u", " ", 
      "f", 
      RowBox[{"(", "u", ")"}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        SubscriptBox["E", "min"], 
        SubscriptBox["E", "max"]], 
       RowBox[{
        RowBox[{"\[DifferentialD]", 
         SubscriptBox["E", "R"]}], 
        StyleBox[" ",
         FontSize->12], 
        FractionBox[
         RowBox[{"8", "\[Pi]", " ", "\[Alpha]", " ", 
          SuperscriptBox[
           RowBox[{"Z", "[", "n", "]"}], "2"], 
          RowBox[{"m", "[", "n", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"m", "[", "n", "]"}], 
             SubscriptBox["E", "R"]}], "+", 
            SuperscriptBox["mA", "2"]}], ")"}], "2"]], 
        SuperscriptBox[
         RowBox[{"F", "[", 
          RowBox[{"n", ",", 
           SubscriptBox["E", "R"]}], "]"}], 
         "2"]}]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Emin", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "mX", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["w", "2"], "-", 
      SuperscriptBox[
       RowBox[{
        SubscriptBox["v", "+"], "[", "r", "]"}], "2"]}], ")"}]}], "=", 
   RowBox[{
    FractionBox["1", "2"], "mX", " ", 
    SuperscriptBox["u", "2"]}]}]}], "\[LineSeparator]", 
 RowBox[{"Emax", " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[Mu]", "2"]}], "mn"], 
    SuperscriptBox["w", "2"]}], "=", 
   RowBox[{"2", 
    FractionBox[
     RowBox[{"mn", " ", 
      SuperscriptBox["mX", "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"mn", "+", "mX"}], ")"}], "2"]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["u", "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SubscriptBox["v", "esc"], "[", "r", "]"}], "2"]}], 
     ")"}]}]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.69237550760793*^9, 3.692375536751542*^9}, {
   3.6923757723006268`*^9, 3.6923758803410187`*^9}, {3.6923764268070374`*^9, 
   3.692376431490973*^9}, {3.69256508176245*^9, 3.6925650820901413`*^9}, 
   3.692640979236343*^9, {3.692654835073494*^9, 3.692654835532982*^9}, {
   3.6942153150690002`*^9, 3.694215327999564*^9}, {3.6984382072693634`*^9, 
   3.698438208507123*^9}, 3.7012754891518717`*^9}],

Cell[TextData[{
 "The integrand depends on:\n- n=N, the nucleus\n- the integration variables\n\
- dark matter mass (in reduced mass)\n- dark photon mass\n\n",
 StyleBox["Important remark",
  FontWeight->"Bold"],
 ": not explicitly shown: a \[CapitalTheta] function that enforces ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "max"], ">", 
    SubscriptBox["E", "min"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6923765680222073`*^9, 3.692376582966374*^9}, {
  3.6923766353699493`*^9, 3.69237666214979*^9}, {3.7012723759122334`*^9, 
  3.701272401411027*^9}}],

Cell[TextData[{
 "Notes on units: \nThe integral over the earth radius is done in meters. \n\
The integral over the DM velocity is done in natural units (dimensionless \
velocities)\nThe integral over the recoil energy is done in GeV.\n\nThe final \
expression for ",
 Cell[BoxData[
  SubscriptBox[
   RowBox[{"(", 
    SuperscriptBox["C", "N"], ")"}], 
   RowBox[{"cap", ",", "red"}]]],
  CellChangeTimes->{{3.69237550760793*^9, 3.692375536751542*^9}, {
    3.6923757723006268`*^9, 3.6923758803410187`*^9}, {3.6923764268070374`*^9, 
    3.692376431490973*^9}, {3.69256508176245*^9, 3.6925650820901413`*^9}, 
    3.692640979236343*^9, {3.692654835073494*^9, 3.692654835532982*^9}}],
 " is in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["GeV", "2"]}], TraditionalForm]]],
 ". Upon multiplying by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "X"], TraditionalForm]]],
 " this has units of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["GeV", "2"], 
     SuperscriptBox["cm", "3"]}]], TraditionalForm]]],
 " which we convert into ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "sec"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.692654843456493*^9, 3.69265498636777*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Further Discussion: accounting for the range of asymptotic velocities\
\>", "Subsection",
 CellChangeTimes->{{3.701272275095175*^9, 3.701272276867608*^9}, {
  3.7012732794763317`*^9, 3.701273289496257*^9}}],

Cell[TextData[{
 "The integrand contains a factor ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"m", "[", "n", "]"}], 
      SubscriptBox["E", "R"]}], "+", 
     SuperscriptBox["mA", "2"]}], ")"}], 
   RowBox[{"-", "2"}]]]],
 ". \n\nObserve that in the integration range, the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "R"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "-dependent term is always subdominant. This is because we are restricted to \
the range where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "max"], ">", 
    SubscriptBox["E", "min"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". This implies that we are only sampling very small values of the \
asymptotic dark matter velocity, ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nThus we may approximate:"
}], "Text",
 CellChangeTimes->{{3.701272292234261*^9, 3.701272350290021*^9}, {
  3.701272411322567*^9, 3.70127246501926*^9}, {3.7012725059469957`*^9, 
  3.701272510556692*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"m", "[", "n", "]"}], 
       SubscriptBox["E", "R"]}], "+", 
      SuperscriptBox["mA", "2"]}], ")"}], "2"]], "=", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["mA", "4"]], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", 
      FractionBox[
       RowBox[{"2", 
        RowBox[{"m", "[", "n", "]"}], 
        SubscriptBox["E", "R"], " "}], 
       SuperscriptBox["mA", "2"]]}], "+", 
     RowBox[{"O", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", 
          RowBox[{"m", "[", "n", "]"}], 
          SubscriptBox["E", "R"], " "}], 
         SuperscriptBox["mA", "2"]], ")"}], "2"]}]}], 
    ")"}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.701272523214528*^9, 3.70127256544103*^9}, {
  3.701272603089003*^9, 3.701272628682143*^9}}],

Cell["\<\
Similarly, the Helm form factor is negligible because the momentum transfer \
is always small. This gives us:\
\>", "Text",
 CellChangeTimes->{{3.7012729934946938`*^9, 3.7012729952773447`*^9}, {
  3.701273105604394*^9, 3.701273121549241*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     SuperscriptBox["C", "N"], ")"}], 
    RowBox[{"cap", ",", "red"}]], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "R"], 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["r4\[Pi]r", "2"]}], " ", 
     SubscriptBox["n", "N"], 
     RowBox[{"(", "r", ")"}], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "c"], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "u"}], " ", "4", "\[Pi]", " ", "u", " ", 
       "f", 
       RowBox[{"(", "u", ")"}], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         SubscriptBox["E", "min"], 
         SubscriptBox["E", "max"]], 
        RowBox[{
         RowBox[{"\[DifferentialD]", 
          SubscriptBox["E", "R"]}], 
         StyleBox[" ",
          FontSize->12], 
         FractionBox[
          RowBox[{"8", "\[Pi]", " ", "\[Alpha]", " ", 
           SuperscriptBox[
            RowBox[{"Z", "[", "n", "]"}], "2"], 
           RowBox[{"m", "[", "n", "]"}]}], 
          SuperscriptBox["mA", "4"]]}]}]}]}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "R"], 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["r4\[Pi]r", "2"]}], " ", 
     SubscriptBox["n", "N"], 
     RowBox[{"(", "r", ")"}], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "c"], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "u"}], " ", "4", "\[Pi]", " ", "u", " ", 
       "f", 
       RowBox[{"(", "u", ")"}], " ", "\[Times]", "  ", 
       FractionBox[
        RowBox[{"8", "\[Pi]", " ", "\[Alpha]", " ", 
         SuperscriptBox[
          RowBox[{"Z", "[", "n", "]"}], "2"], 
         RowBox[{"m", "[", "n", "]"}]}], 
        SuperscriptBox["mA", "4"]], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["E", "max"], "-", 
         SubscriptBox["E", "min"]}], ")"}], " ", "\[CapitalTheta]", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["E", "max"], "-", 
         SubscriptBox["E", "min"]}], ")"}]}]}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox[
   RowBox[{"(", 
    SuperscriptBox["C", "N"], ")"}], "cap"], "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "R"], 
   RowBox[{
    RowBox[{"\[DifferentialD]", 
     SuperscriptBox["r4\[Pi]r", "2"]}], " ", 
    SubscriptBox["n", "N"], 
    RowBox[{"(", "r", ")"}], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "c"], 
     RowBox[{
      RowBox[{"\[DifferentialD]", "u"}], " ", "4", "\[Pi]", " ", "u", " ", 
      "f", 
      RowBox[{"(", "u", ")"}], " ", "\[Times]", "  ", 
      FractionBox[
       RowBox[{"8", "\[Pi]", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"Z", "[", "n", "]"}], "2"], 
        RowBox[{"m", "[", "n", "]"}]}], 
       SuperscriptBox["mA", "4"]], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["E", "max"], "-", 
        SubscriptBox["E", "min"]}], ")"}], " ", "\[CapitalTheta]", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["E", "max"], "-", 
        SubscriptBox["E", "min"]}], ")"}]}]}]}]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.7012730009220324`*^9, 3.70127301357788*^9}, {
  3.701273219865726*^9, 3.701273262055081*^9}, {3.701275286029296*^9, 
  3.7012753169306393`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Revised capture rate", "Subsection",
 CellChangeTimes->{{3.701275331149247*^9, 3.7012753344927683`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     SuperscriptBox["C", "N"], ")"}], "cap"], "=", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", "2"], 
    SubscriptBox["\[Alpha]", "X"], 
    SubscriptBox["n", "X"], 
    FractionBox[
     RowBox[{"8", "\[Pi]", " ", "\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"Z", "[", "n", "]"}], "2"], 
      RowBox[{"m", "[", "n", "]"}]}], 
     SuperscriptBox["mA", "4"]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "R"], 
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       SuperscriptBox["r4\[Pi]r", "2"]}], " ", 
      SubscriptBox["n", "N"], 
      RowBox[{"(", "r", ")"}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "c"], 
       RowBox[{
        RowBox[{"\[DifferentialD]", "u"}], " ", "4", "\[Pi]", " ", "u", " ", 
        "f", 
        RowBox[{"(", "u", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["E", "max"], 
           RowBox[{"(", "u", ")"}]}], "-", 
          RowBox[{
           SubscriptBox["E", "min"], 
           RowBox[{"(", "u", ")"}]}]}], ")"}], " ", "\[CapitalTheta]", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["E", "max"], "-", 
          SubscriptBox["E", "min"]}], ")"}]}]}]}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Emin", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "mX", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["w", "2"], "-", 
      SuperscriptBox[
       RowBox[{
        SubscriptBox["v", "+"], "[", "r", "]"}], "2"]}], ")"}]}], "=", 
   RowBox[{
    FractionBox["1", "2"], "mX", " ", 
    SuperscriptBox["u", "2"]}]}]}], "\[LineSeparator]", 
 RowBox[{"Emax", " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[Mu]", "2"]}], "mn"], 
    SuperscriptBox["w", "2"]}], "=", 
   RowBox[{"2", 
    FractionBox[
     RowBox[{"mn", " ", 
      SuperscriptBox["mX", "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"mn", "+", "mX"}], ")"}], "2"]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["u", "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SubscriptBox["v", "esc"], "[", "r", "]"}], "2"]}], 
     ")"}]}]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.69237550760793*^9, 3.692375536751542*^9}, {
   3.6923757723006268`*^9, 3.6923758803410187`*^9}, {3.6923764268070374`*^9, 
   3.692376431490973*^9}, {3.69256508176245*^9, 3.6925650820901413`*^9}, 
   3.692640979236343*^9, {3.692654835073494*^9, 3.692654835532982*^9}, {
   3.6942153150690002`*^9, 3.694215327999564*^9}, {3.6984382072693634`*^9, 
   3.698438208507123*^9}, {3.701275348309606*^9, 3.701275376693371*^9}, 
   3.701275482757114*^9}],

Cell["\<\
We can improve this by setting an upper limit on the velocity integral. \
Recall that\
\>", "Text",
 CellChangeTimes->{{3.7012754085929832`*^9, 3.7012754256708937`*^9}}],

Cell[BoxData[{
 RowBox[{"Emin", " ", "=", " ", 
  RowBox[{"a", " ", 
   SuperscriptBox["u", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Emax", " ", "=", " ", 
   RowBox[{
    RowBox[{"b", " ", 
     SuperscriptBox["u", "2"]}], "+", "c"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"These", " ", "match", " ", 
   RowBox[{"at", ":", "\[IndentingNewLine]", 
    SubscriptBox["u", "max"]}]}], "=", 
  RowBox[{
   SqrtBox[
    FractionBox["c", 
     RowBox[{"a", "-", "b"}]]], "=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"2", " ", 
       FractionBox[
        SuperscriptBox["\[Mu]", "2"], "mn"], 
       SuperscriptBox[
        RowBox[{
         SubscriptBox["v", "esc"], "[", "r", "]"}], "2"]}], 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "mX"}], "-", 
       RowBox[{"2", 
        FractionBox[
         SuperscriptBox["\[Mu]", "2"], "mn"]}]}]]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["v", "esc"], "[", "r", "]"}], 
      SqrtBox[
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], 
         FractionBox[
          RowBox[{"mX", " ", "mn"}], 
          SuperscriptBox["\[Mu]", "2"]]}], "-", "1"}]]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["v", "esc"], "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         FractionBox[
          RowBox[{"mX", " ", "mn"}], 
          SuperscriptBox["\[Mu]", "2"]], "-", "4"}]]], "=", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["v", "esc"], "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"mX", " ", "+", "mn"}], ")"}], "2"], 
          RowBox[{"mX", " ", "mn"}]], "-", 
         "4"}]]]}]}]}]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.701275431298379*^9, 3.701275679464183*^9}, {
  3.70127588326327*^9, 3.701275883587237*^9}}],

Cell[TextData[{
 "This value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the upper limit of the velocity integral. Imposing this also obviates \
the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalTheta]", "(", 
    RowBox[{
     SubscriptBox["E", "max"], "-", 
     SubscriptBox["E", "min"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " factor.\n\nWith this:"
}], "Text",
 CellChangeTimes->{{3.701275682372864*^9, 3.701275742964113*^9}, {
  3.70127588497086*^9, 3.70127588526624*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    RowBox[{"(", 
     SuperscriptBox["C", "N"], ")"}], "cap"], "=", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", "2"], 
    SubscriptBox["\[Alpha]", "X"], 
    SubscriptBox["n", "X"], 
    FractionBox[
     RowBox[{"8", "\[Pi]", " ", "\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"Z", "[", "n", "]"}], "2"], "mn"}], 
     SuperscriptBox["mA", "4"]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "R"], 
     RowBox[{
      RowBox[{"\[DifferentialD]", 
       SuperscriptBox["r4\[Pi]r", "2"]}], " ", 
      SubscriptBox["n", "N"], 
      RowBox[{"(", "r", ")"}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", 
        SubscriptBox["u", "max"]], 
       RowBox[{
        RowBox[{"\[DifferentialD]", "u"}], " ", "4", "\[Pi]", " ", "u", " ", 
        "f", 
        RowBox[{"(", "u", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["E", "max"], 
           RowBox[{"(", "u", ")"}]}], "-", 
          RowBox[{
           SubscriptBox["E", "min"], 
           RowBox[{"(", "u", ")"}]}]}], ")"}]}]}]}]}]}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "2"], 
   SubscriptBox["\[Alpha]", "X"], 
   SubscriptBox["n", "X"], 
   FractionBox[
    RowBox[{"8", "\[Pi]", " ", "\[Alpha]", " ", 
     SuperscriptBox[
      RowBox[{"Z", "[", "n", "]"}], "2"], "mn"}], 
    SuperscriptBox["mA", "4"]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "R"], 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["r4\[Pi]r", "2"]}], " ", 
     SubscriptBox["n", "N"], 
     RowBox[{"(", "r", ")"}], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       SubscriptBox["u", "max"]], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "u"}], " ", "4", "\[Pi]", " ", "u", " ", 
       "f", 
       RowBox[{
        RowBox[{"(", "u", ")"}], " ", "[", 
        RowBox[{
         RowBox[{"2", 
          FractionBox[
           RowBox[{"mn", " ", 
            SuperscriptBox["mX", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mn", "+", "mX"}], ")"}], "2"]], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox[
             RowBox[{
              SubscriptBox["v", "esc"], "[", "r", "]"}], "2"]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], "mX", " ", 
          SuperscriptBox["u", "2"]}]}], 
        "]"}]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{"8", "\[Pi]", " ", 
   SuperscriptBox["\[Epsilon]", "2"], "\[Alpha]", " ", 
   SubscriptBox["\[Alpha]", "X"], 
   SubscriptBox["n", "X"], " ", 
   SuperscriptBox[
    RowBox[{"Z", "[", "n", "]"}], "2"], " ", 
   FractionBox[
    RowBox[{"mn", " ", "mX"}], 
    SuperscriptBox["mA", "4"]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "R"], 
    RowBox[{
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["r4\[Pi]r", "2"]}], " ", 
     SubscriptBox["n", "N"], 
     RowBox[{"(", "r", ")"}], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       SubscriptBox["u", "max"]], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "u"}], " ", "4", "\[Pi]", " ", "u", " ", 
       "f", 
       RowBox[{
        RowBox[{"(", "u", ")"}], " ", "[", 
        RowBox[{
         RowBox[{"2", 
          FractionBox[
           SuperscriptBox["\[Mu]", "2"], 
           RowBox[{"mn", " ", "mX"}]], 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox[
             RowBox[{
              SubscriptBox["v", "esc"], "[", "r", "]"}], "2"]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["u", "2"]}]}], "]"}]}]}]}]}]}]}]}], "DisplayFormula",\

 CellChangeTimes->{{3.69237550760793*^9, 3.692375536751542*^9}, {
   3.6923757723006268`*^9, 3.6923758803410187`*^9}, {3.6923764268070374`*^9, 
   3.692376431490973*^9}, {3.69256508176245*^9, 3.6925650820901413`*^9}, 
   3.692640979236343*^9, {3.692654835073494*^9, 3.692654835532982*^9}, {
   3.6942153150690002`*^9, 3.694215327999564*^9}, {3.6984382072693634`*^9, 
   3.698438208507123*^9}, {3.701275348309606*^9, 3.701275376693371*^9}, 
   3.701275482757114*^9, {3.7012757488799877`*^9, 3.701275847036593*^9}, {
   3.7012758874314203`*^9, 3.701275890008541*^9}, {3.7012768198427553`*^9, 
   3.701276820060783*^9}, {3.701276901681571*^9, 3.701276930270097*^9}, {
   3.701276965327901*^9, 3.7012770295478888`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"umax", "[", 
   RowBox[{"rindex_", ",", "n_", ",", "mXinGeV_"}], "]"}], ":=", 
  RowBox[{"2", 
   SqrtBox[
    FractionBox[
     RowBox[{"v2", "[", 
      RowBox[{"[", "rindex", "]"}], "]"}], 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"mXinGeV", "+", 
          RowBox[{"mnInGeV", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}], ")"}], "2"], 
       RowBox[{"mXinGeV", " ", 
        RowBox[{"mnInGeV", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}]], "-", 
      "4"}]]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uIntegrand", "[", 
   RowBox[{"u_", ",", "rindex_", ",", "n_", ",", "mXinGeV_"}], "]"}], ":=", 
  " ", 
  RowBox[{"4", "\[Pi]", " ", "u", " ", 
   RowBox[{"f", "[", "u", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"mnInGeV", "[", 
           RowBox[{"[", "n", "]"}], "]"}], " ", "mXinGeV"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"mnInGeV", "[", 
             RowBox[{"[", "n", "]"}], "]"}], " ", "+", "mXinGeV"}], ")"}], 
          "2"]]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["u", "2"], "+", 
        RowBox[{"v2", "[", 
         RowBox[{"[", "rindex", "]"}], "]"}]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["u", "2"]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.701275874517489*^9, 3.701275879882146*^9}, {
  3.701276037874598*^9, 3.7012762351331253`*^9}, {3.7012764106152*^9, 
  3.701276472896275*^9}, {3.701276593078823*^9, 3.701276654016356*^9}, {
  3.701276697829465*^9, 3.701276773364853*^9}, {3.7012771267500343`*^9, 
  3.701277157171155*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"r", " ", "integral", " ", "is", " ", "in", " ", "meters"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"\[CapitalDelta]R", " ", "is", " ", "included"}], ";", " ", 
     RowBox[{"the", " ", "integrand", " ", "is", " ", "dimensionless"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rIntegrand", "[", 
     RowBox[{"rindex_", ",", "n_", ",", "mXinGeV_"}], "]"}], ":=", " ", 
    RowBox[{"4", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"Rmeters", "[", 
       RowBox[{"[", "rindex", "]"}], "]"}], "2"], 
     RowBox[{"\[CapitalDelta]Rmeters", "[", 
      RowBox[{"[", "rindex", "]"}], "]"}], " ", 
     RowBox[{
      RowBox[{"nmeters", "[", 
       RowBox[{"[", "n", "]"}], "]"}], "[", 
      RowBox[{"[", "rindex", "]"}], "]"}], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"uIntegrand", "[", 
        RowBox[{"u", ",", "rindex", ",", "n", ",", "mXinGeV"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"umax", "[", 
          RowBox[{"rindex", ",", "n", ",", "mXinGeV"}], "]"}]}], "}"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rIntegrands", "[", 
     RowBox[{"n_", ",", "mXinGeV_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"rIntegrand", "[", 
       RowBox[{"#", ",", "n", ",", "mXinGeV"}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "Radius", "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ccap", "[", 
     RowBox[{
     "\[Epsilon]_", ",", "\[Alpha]X_", ",", "n_", ",", "mXinGeV_", ",", 
      "mAinGeV_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"8", "\[Pi]", " ", 
       SuperscriptBox["\[Epsilon]", "2"], 
       FractionBox["1", "137."], "\[Alpha]X", " ", 
       RowBox[{"(", 
        FractionBox["0.3", "mXinGeV"], " ", 
        RowBox[{"(*", 
         FractionBox["1", 
          SuperscriptBox["cm", "3"]], "*)"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Z", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "2"], 
       FractionBox[
        RowBox[{
         RowBox[{"mnInGeV", "[", 
          RowBox[{"[", "n", "]"}], "]"}], " ", "mXinGeV"}], 
        SuperscriptBox["mAinGeV", "4"]], 
       RowBox[{"(*", 
        FractionBox["1", 
         SuperscriptBox["GeV", "2"]], "*)"}], 
       RowBox[{"rIntegrands", "[", 
        RowBox[{"n", ",", "mXinGeV"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.98", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "14"}]]}], " ", 
         RowBox[{"(*", 
          RowBox[{"cm", " ", "GeV"}], "*)"}], ")"}], "2"], 
       RowBox[{"(", 
        RowBox[{"3", " ", 
         SuperscriptBox["10", "10"]}], " ", 
        RowBox[{"(*", 
         FractionBox["cm", "s"], "*)"}], ")"}]}], "]"}], 
     FractionBox["1", "sec"]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7012771847692423`*^9, 3.701277236286379*^9}, {
   3.701277302759688*^9, 3.701277325661703*^9}, {3.701277574728527*^9, 
   3.7012776142167597`*^9}, {3.701277702511715*^9, 3.701277751416524*^9}, {
   3.70127780959772*^9, 3.701277812012368*^9}, 3.7012778623026667`*^9, {
   3.7012780651933117`*^9, 3.701278066334137*^9}, {3.7012780998512487`*^9, 
   3.701278109838583*^9}, {3.701278169498238*^9, 3.701278174508527*^9}, {
   3.701278209938497*^9, 3.701278248217826*^9}, {3.7012784047367687`*^9, 
   3.7012785587576733`*^9}, {3.70127861157168*^9, 3.701278716698659*^9}, {
   3.7012787720012712`*^9, 3.701278777617219*^9}}],

Cell[CellGroupData[{

Cell["Testing, takes 10 seconds", "Subsubsection",
 CellChangeTimes->{{3.701278290621661*^9, 3.7012782913374233`*^9}, {
  3.701278372373122*^9, 3.701278375056085*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"rIntegrands", "[", 
   RowBox[{"1", ",", "1000."}], "]"}], "]"}]], "Input",
 Editable->False,
 CellChangeTimes->{{3.701278298486473*^9, 3.701278323680172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.41659`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "2.1600705580394688`*^36", ",", "2.167735788324916`*^36", 
     ",", "2.1748339292198477`*^36", ",", "2.1821557510779266`*^36", ",", 
     "2.1896998915183913`*^36", ",", "2.1966767275902405`*^36", ",", 
     "2.2041399299120533`*^36", ",", "2.211029158884947`*^36", ",", 
     "2.2181392890507474`*^36", ",", "2.2254768005420213`*^36", ",", 
     "2.232236417870096`*^36", ",", "2.0191490431752712`*^36", ",", 
     "2.0249024938205126`*^36", ",", "2.0308772624803864`*^36", ",", 
     "2.0363074749814308`*^36", ",", "2.0419537768532305`*^36", ",", 
     "2.0475626981265593`*^36", ",", "2.053134023214414`*^36", ",", 
     "2.0589236877557946`*^36", ",", "2.0641679331768637`*^36", ",", 
     "2.0696252089066954`*^36", ",", "2.0750478720478808`*^36", ",", 
     "2.0804280756872208`*^36", ",", "2.086031046317847`*^36", ",", 
     "2.09108056769444`*^36", ",", "2.0963436411656926`*^36", ",", 
     "2.101571161004975`*^36", ",", "2.107017980421976`*^36", ",", 
     "2.1119043084798253`*^36", ",", "2.1170123663350344`*^36", ",", 
     "2.1220762673274143`*^36", ",", "2.1270997500669252`*^36", ",", 
     "2.13234681553606`*^36", ",", "2.13702980152544`*^36", ",", 
     "2.1419309271152462`*^36", ",", "2.1467908970372726`*^36", ",", 
     "2.151605491947683`*^36", ",", "2.156643900411068`*^36", ",", 
     "2.1611150374043888`*^36", ",", "2.1658045005209218`*^36", ",", 
     "2.17045190316215`*^36", ",", "2.175057075891194`*^36", ",", 
     "2.179877935151876`*^36", ",", "2.1841328709409736`*^36", ",", 
     "2.188606180390018`*^36", ",", "2.1930365754010196`*^36", ",", 
     "2.1974197207184338`*^36", ",", "2.202022528067156`*^36", ",", 
     "2.206052953066116`*^36", ",", "2.210305848233876`*^36", ",", 
     "2.2145065686470776`*^36", ",", "2.2189309632116634`*^36", ",", 
     "2.2227814308861343`*^36", ",", "2.2268499712431393`*^36", ",", 
     "2.2308698785153803`*^36", ",", "2.234845267752776`*^36", ",", 
     "2.2390354045229628`*^36", ",", "2.2426543620401867`*^36", ",", 
     "2.2464866845052807`*^36", ",", "2.2502738980339694`*^36", ",", 
     "2.254011515082132`*^36", ",", "2.2579676137343165`*^36", ",", 
     "2.2613471210240623`*^36", ",", "2.2649437823671356`*^36", ",", 
     "2.2684902507016178`*^36", ",", "2.271986370303425`*^36", ",", 
     "2.2757002543025955`*^36", ",", "2.2788368886296843`*^36", ",", 
     "2.2821899899731832`*^36", ",", "2.2854921928361363`*^36", ",", 
     "2.2887433535475693`*^36", ",", "2.2922114170436904`*^36", ",", 
     "2.2951020351151858`*^36", ",", "2.2982037720594574`*^36", ",", 
     "2.3012539408018264`*^36", ",", "2.30452020417687`*^36", ",", 
     "2.3072091878473263`*^36", ",", "2.310108460605063`*^36", ",", 
     "2.3129556783959834`*^36", ",", "2.3157553072711685`*^36", ",", 
     "2.3187607100149962`*^36", ",", "2.321194045629042`*^36", ",", 
     "2.323836499219621`*^36", ",", "2.3264309723205957`*^36", ",", 
     "2.3289681021286057`*^36", ",", "2.3317142354954332`*^36", ",", 
     "2.3338894552760176`*^36", ",", "2.3362678033643142`*^36", ",", 
     "2.3385977091562712`*^36", ",", "2.3408744108374398`*^36", ",", 
     "2.3433539180916068`*^36", ",", "2.3452641169472948`*^36", ",", 
     "2.347380645548287`*^36", ",", "2.3494388718075404`*^36", ",", 
     "2.3514481856008163`*^36", ",", "2.3536633639374625`*^36", ",", 
     "2.3553017889344512`*^36", ",", "2.3571496911809713`*^36", ",", 
     "2.358938852839504`*^36", ",", "2.3606739775652836`*^36", ",", 
     "2.3626131557889966`*^36", ",", "2.3639828393540527`*^36", ",", 
     "2.36555546333637`*^36", ",", "2.3670738005800208`*^36", ",", 
     "2.368794660298768`*^36", ",", "2.3699435099351774`*^36", ",", 
     "2.3712937790438238`*^36", ",", "2.3725895354355994`*^36", ",", 
     "2.373830734333477`*^36", ",", "2.3752674978912897`*^36", ",", 
     "2.3761404418067742`*^36", ",", "2.3772127866476228`*^36", ",", 
     "2.3782304037324834`*^36", ",", "2.3791883243671803`*^36", ",", 
     "2.3803445015115148`*^36", ",", "2.3809357267803058`*^36", ",", 
     "2.3817291476985747`*^36", ",", "2.3824577491148443`*^36", ",", 
     "2.383136407555694`*^36", ",", "2.3840060091452762`*^36", ",", 
     "2.384314897005635`*^36", ",", "2.3848237232954464`*^36", ",", 
     "2.3852675529690463`*^36", ",", "2.385661406081988`*^36", ",", 
     "2.3862386578622203`*^36", ",", "2.3862699754834545`*^36", ",", 
     "2.3864887622729466`*^36", ",", "2.3866474923594713`*^36", ",", 
     "2.3869975975607383`*^36", ",", "2.3867958075076046`*^36", ",", 
     "2.386779399424726`*^36", ",", "2.386708007531592`*^36", ",", 
     "2.3865816548457784`*^36", ",", "2.3866388800689998`*^36", ",", 
     "2.3861497565154532`*^36", ",", "2.3858433093975127`*^36", ",", 
     "2.3854819777243843`*^36", ",", "2.3850606669003473`*^36", ",", 
     "2.3848251925853542`*^36", ",", "2.3840493821125292`*^36", ",", 
     "2.3834534249612117`*^36", ",", "2.382797597470449`*^36", ",", 
     "2.3820870979240013`*^36", ",", "2.3815543157745934`*^36", ",", 
     "2.3804876563354246`*^36", ",", "2.3795979000647978`*^36", ",", 
     "2.3786484769438085`*^36", ",", "2.3776446335852207`*^36", ",", 
     "2.3768154037496493`*^36", ",", "2.3754592115943356`*^36", ",", 
     "2.374276862967254`*^36", ",", "2.3730351298631455`*^36", ",", 
     "2.3719654411471625`*^36", ",", "2.37037987108582`*^36", ",", 
     "2.3689603821887802`*^36", ",", "2.367487028705864`*^36", ",", 
     "2.3659494003604582`*^36", ",", "2.364585772020171`*^36", ",", 
     "2.3627034808963145`*^36", ",", "2.360994511310698`*^36", ",", 
     "2.359226855997051`*^36", ",", "2.3573953294407656`*^36", ",", 
     "2.355734430164401`*^36", ",", "2.353562982225642`*^36", ",", 
     "2.3515562348330132`*^36", ",", "2.719800798142631`*^36", ",", 
     "2.716929565292292`*^36", ",", "2.714437258611897`*^36", ",", 
     "2.711398579991052`*^36", ",", "2.708729343895746`*^36", ",", 
     "2.7055178371127273`*^36", ",", "2.7026723764337646`*^36", ",", 
     "3.11740315313381`*^36", ",", "3.117832021687403`*^36", ",", 
     "3.118173337223426`*^36", ",", "3.118411373450769`*^36", ",", 
     "2.243908721642792`*^36", ",", "2.2361401354809163`*^36", ",", 
     "2.2279339934875244`*^36", ",", "2.219867255468653`*^36", ",", 
     "2.2119486471702035`*^36", ",", "2.2035905300135488`*^36", ",", 
     "2.1953808411408726`*^36", ",", "2.1873055446737628`*^36", ",", 
     "2.1788115667500083`*^36", ",", "2.170452285667892`*^36", ",", 
     "2.1622364131213556`*^36", ",", "2.1535999532014483`*^36", ",", 
     "2.145107238016592`*^36", ",", "2.1367441422687366`*^36", ",", 
     "2.1279814003751853`*^36", ",", "2.1084893539774515`*^36", ",", 
     "2.1045435925729434`*^36", ",", "2.100557589370441`*^36", ",", 
     "2.0966999930582402`*^36", ",", "2.092466465281447`*^36", ",", 
     "2.088361109657809`*^36", ",", "2.0842224141909046`*^36", ",", 
     "2.0800386554409178`*^36", ",", "2.0758160466934438`*^36", ",", 
     "2.0717176491108368`*^36", ",", "2.067255904686398`*^36", ",", 
     "2.0629181718071454`*^36", ",", "2.0585485374631572`*^36", ",", 
     "2.0383160268035734`*^36", ",", "2.0397501585238866`*^36", ",", 
     "2.0411499350387198`*^36", ",", "2.0425212706099662`*^36", ",", 
     "2.0438518746385417`*^36", ",", "2.0451476612642637`*^36", ",", 
     "2.0464084777018663`*^36", ",", "2.0476341717884617`*^36", ",", 
     "2.0488245919935942`*^36", ",", "2.049985661982912`*^36", ",", 
     "2.742531711084788`*^36", ",", "2.744647005580481`*^36", ",", 
     "2.7463811530465294`*^36", ",", "1.1813870499167542`*^36", ",", 
     "1.355460855862019`*^36", ",", "1.3219191539977889`*^35"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7012783082799377`*^9, 3.701278351464719*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Helm Form Factor", "Subsection",
 CellChangeTimes->{{3.7012731452989407`*^9, 3.701273147066266*^9}}],

Cell[TextData[{
 "I believe this is completely negligible since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "r"], 
    RowBox[{"<<", " ", "GeV"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ."
}], "Text",
 CellChangeTimes->{{3.7012731770556297`*^9, 3.7012732146298103`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fn2", "[", 
   RowBox[{"Er_", " ", 
    RowBox[{"(*", 
     RowBox[{"in", " ", "GeV"}], "*)"}], ",", "n_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"En", "=", 
      FractionBox["0.114", 
       SuperscriptBox[
        RowBox[{
         RowBox[{"MyElements", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], 
        RowBox[{"5", "/", "3"}]]]}], "}"}], ",", "\[IndentingNewLine]", 
    SuperscriptBox["E", 
     RowBox[{
      RowBox[{"-", "Er"}], "/", "En"}]]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["Sanity Check", "Subsubsection",
 CellChangeTimes->{{3.701273158262073*^9, 3.701273159969346*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fn2", "[", 
   RowBox[{".001", " ", 
    RowBox[{"(*", 
     RowBox[{"Er", " ", "in", " ", "GeV"}], "*)"}], ",", "1"}], " ", 
   RowBox[{"(*", 
    RowBox[{"MyElements", " ", "index"}], "*)"}], "]"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Edit", " ", "by", " ", "Adam", " ", "Green", " ", 
    RowBox[{
     RowBox[{"3", "/", "13"}], "/", "17"}]}], "*)"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Check", ":", " ", "0.4101745326788613"}], " ", "*)"}]}]}], "Input"],

Cell[BoxData["0.4101745326788613`"], "Output",
 CellChangeTimes->{3.701273161204987*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Fn2", "[", 
   RowBox[{".000001", " ", 
    RowBox[{"(*", 
     RowBox[{"Er", " ", "in", " ", "GeV"}], "*)"}], ",", "1"}], " ", 
   RowBox[{"(*", 
    RowBox[{"MyElements", " ", "index"}], "*)"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.701273169932024*^9, 3.701273170238977*^9}}],

Cell[BoxData["0.9991092244558938`"], "Output",
 CellChangeTimes->{3.701273170522593*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Section",
 CellChangeTimes->{{3.701278563003031*^9, 3.701278563314931*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ccap", "[", 
  RowBox[{
   SuperscriptBox["10", 
    RowBox[{"-", "8"}]], ",", "0.035", ",", "4", " ", 
   RowBox[{"(*", "Fe", "*)"}], ",", "1000", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012785713803062`*^9, 3.701278604556855*^9}, {
  3.7012787286993227`*^9, 3.7012787516470747`*^9}}],

Cell[BoxData[
 FractionBox["2.4840085087848666`*^8", "sec"]], "Output",
 CellChangeTimes->{{3.701278761852551*^9, 3.701278787842108*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{944, 720},
WindowMargins->{{Automatic, 92}, {Automatic, 21}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 107, 1, 92, "Title"],
Cell[690, 25, 531, 17, 239, "Text"],
Cell[CellGroupData[{
Cell[1246, 46, 100, 1, 64, "Section"],
Cell[1349, 49, 225, 3, 30, "Text"],
Cell[1577, 54, 977, 16, 201, "Text"],
Cell[CellGroupData[{
Cell[2579, 74, 119, 1, 44, "Subsection"],
Cell[2701, 77, 1878, 55, 265, "Input"],
Cell[CellGroupData[{
Cell[4604, 136, 103, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[4732, 141, 915, 27, 160, "Input"],
Cell[5650, 170, 309, 7, 70, "Output"],
Cell[5962, 179, 552, 16, 70, "Output"],
Cell[6517, 197, 162, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6740, 206, 171, 2, 44, "Subsection"],
Cell[6914, 210, 200, 4, 30, "Text"],
Cell[7117, 216, 1189, 33, 113, "Input"],
Cell[CellGroupData[{
Cell[8331, 253, 192, 2, 35, "Subsubsection"],
Cell[8526, 257, 147, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[8698, 266, 224, 5, 32, "Input"],
Cell[8925, 273, 281, 4, 32, "Output"]
}, Open  ]],
Cell[9221, 280, 219, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[9465, 288, 375, 7, 32, "Input"],
Cell[9843, 297, 562, 10, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10442, 312, 724, 18, 75, "Input"],
Cell[11169, 332, 338, 6, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11556, 344, 133, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[11714, 349, 431, 11, 75, "Input"],
Cell[12148, 362, 7738, 141, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19947, 510, 102, 1, 44, "Subsection"],
Cell[20052, 513, 129, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[20206, 520, 115, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[20346, 525, 640, 16, 96, "Input"],
Cell[20989, 543, 412, 8, 70, "Output"],
Cell[21404, 553, 8201, 149, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29678, 710, 100, 1, 64, "Section"],
Cell[29781, 713, 182, 4, 30, "Text"],
Cell[29966, 719, 1192, 30, 46, "DisplayFormula"],
Cell[31161, 751, 392, 9, 51, "Text"],
Cell[31556, 762, 1594, 52, 104, "DisplayFormula"],
Cell[33153, 816, 441, 13, 51, "Text"],
Cell[33597, 831, 1797, 53, 182, "Input"],
Cell[CellGroupData[{
Cell[35419, 888, 155, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[35599, 894, 171, 4, 32, "Input"],
Cell[35773, 900, 539, 10, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36349, 915, 404, 9, 102, "Input"],
Cell[36756, 926, 8286, 150, 70, "Output"]
}, Open  ]],
Cell[45057, 1079, 218, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[45300, 1087, 299, 9, 54, "Input"],
Cell[45602, 1098, 858, 22, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46497, 1125, 487, 12, 102, "Input"],
Cell[46987, 1139, 9203, 163, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56251, 1309, 165, 2, 64, "Section"],
Cell[56419, 1313, 181, 4, 30, "Text"],
Cell[56603, 1319, 87527, 1442, 300, "Text"],
Cell[144133, 2763, 2039, 50, 306, "Input"],
Cell[CellGroupData[{
Cell[146197, 2817, 103, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[146325, 2822, 59, 1, 32, "Input"],
Cell[146387, 2825, 1246, 28, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[147694, 2860, 107, 1, 64, "Section"],
Cell[147804, 2863, 149, 4, 30, "Text"],
Cell[147956, 2869, 334, 9, 54, "Input"],
Cell[CellGroupData[{
Cell[148315, 2882, 112, 1, 44, "Subsection"],
Cell[148430, 2885, 208, 4, 30, "Text"],
Cell[148641, 2891, 531, 14, 45, "DisplayFormula"],
Cell[149175, 2907, 5299, 139, 489, "Input"],
Cell[CellGroupData[{
Cell[154499, 3050, 162, 2, 35, "Subsubsection"],
Cell[154664, 3054, 134, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[154823, 3059, 223, 7, 32, "Input"],
Cell[155049, 3068, 383, 11, 32, "Output"]
}, Open  ]],
Cell[155447, 3082, 337, 10, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[155821, 3097, 103, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[155949, 3102, 777, 21, 102, "Input"],
Cell[156729, 3125, 11718, 206, 225, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168520, 3339, 118, 1, 64, "Section"],
Cell[168641, 3342, 390, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[169056, 3353, 115, 1, 44, "Subsection"],
Cell[169174, 3356, 2560, 76, 318, "Input"],
Cell[CellGroupData[{
Cell[171759, 3436, 95, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[171879, 3441, 28, 0, 32, "Input"],
Cell[171910, 3443, 94, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172041, 3449, 396, 10, 75, "Input"],
Cell[172440, 3461, 8981, 163, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181458, 3629, 593, 16, 100, "Input"],
Cell[182054, 3647, 11532, 206, 243, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193647, 3860, 142, 1, 44, "Subsection"],
Cell[193792, 3863, 326, 6, 49, "Text"],
Cell[194121, 3871, 1421, 43, 90, "DisplayFormula"],
Cell[195545, 3916, 576, 11, 87, "Text"],
Cell[196124, 3929, 1548, 48, 157, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197721, 3983, 95, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[197841, 3988, 98, 1, 44, "Subsection"],
Cell[197942, 3991, 941, 26, 169, "Text"],
Cell[198886, 4019, 3125, 96, 175, "DisplayFormula"],
Cell[202014, 4117, 626, 16, 146, "Text"],
Cell[202643, 4135, 1253, 36, 135, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203933, 4176, 216, 4, 44, "Subsection"],
Cell[204152, 4182, 1094, 33, 135, "Text"],
Cell[205249, 4217, 924, 31, 52, "DisplayFormula"],
Cell[206176, 4250, 252, 5, 30, "Text"],
Cell[206431, 4257, 3397, 99, 188, "DisplayFormula"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209865, 4361, 110, 1, 44, "Subsection"],
Cell[209978, 4364, 2754, 82, 159, "DisplayFormula"],
Cell[212735, 4448, 179, 4, 30, "Text"],
Cell[212917, 4454, 2005, 67, 187, "DisplayFormula"],
Cell[214925, 4523, 583, 18, 70, "Text"],
Cell[215511, 4543, 4584, 130, 145, "DisplayFormula"],
Cell[220098, 4675, 1815, 53, 146, "Input"],
Cell[221916, 4730, 3652, 92, 262, "Input"],
Cell[CellGroupData[{
Cell[225593, 4826, 167, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[225785, 4832, 209, 5, 32, "Input"],
Cell[225997, 4839, 11325, 161, 919, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237383, 5007, 106, 1, 44, "Subsection"],
Cell[237492, 5010, 308, 10, 32, "Text"],
Cell[237803, 5022, 683, 21, 154, "Input"],
Cell[CellGroupData[{
Cell[238511, 5047, 103, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[238639, 5052, 553, 15, 96, "Input"],
Cell[239195, 5069, 88, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239320, 5075, 321, 8, 32, "Input"],
Cell[239644, 5085, 88, 1, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239805, 5094, 89, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[239919, 5099, 321, 7, 35, "Input"],
Cell[240243, 5108, 137, 2, 86, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

